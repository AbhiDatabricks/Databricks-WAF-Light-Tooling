{"datasets":[{"name":"303a6758","displayName":"Count of Tables","query":"SELECT COUNT(*) FROM system.information_schema.tables;"},{"name":"f5bf425c","displayName":"Count of Volumes","query":"SELECT COUNT(*) FROM system.information_schema.volumes;"},{"name":"5fdcd556","displayName":"Count of Functions","query":"SELECT COUNT(*) FROM system.information_schema.routines;"},{"name":"a92ace17","displayName":"Count of Unused Tables","query":"SELECT \n  COUNT(DISTINCT CONCAT(ist.table_catalog, '.', ist.table_schema, '.', ist.table_name)) AS full_name_count\nFROM \n  system.information_schema.tables ist\n  LEFT JOIN \n    (SELECT \n       tl.source_table_catalog,\n       tl.source_table_schema,\n       tl.source_table_name\n     FROM \n       system.access.table_lineage tl\n     WHERE \n       tl.event_time BETWEEN :date_range_start AND :date_range_end\n       AND tl.source_type IN ('TABLE', 'STREAMING_TABLE')\n    ) tl\n    ON \n      tl.source_table_catalog = ist.table_catalog \n      AND tl.source_table_schema = ist.table_schema \n      AND tl.source_table_name = ist.table_name\nWHERE\n  tl.source_table_catalog IS NULL;","parameters":[{"displayName":"date_range_start","keyword":"date_range_start","dataType":"DATETIME","defaultSelection":{"values":{"dataType":"DATETIME","values":[{"value":"now-30d/d"}]}}},{"displayName":"date_range_end","keyword":"date_range_end","dataType":"DATETIME","defaultSelection":{"values":{"dataType":"DATETIME","values":[{"value":"now/s"}]}}}]},{"name":"55e66413","displayName":"Count of Tables with Usage","query":"SELECT \n  COUNT(DISTINCT CONCAT(source_table_catalog, '.', source_table_schema, '.', source_table_name)) AS distinct_tables\nFROM \n  system.access.table_lineage\nWHERE \n  event_time BETWEEN :date_range_start AND :date_range_end\n  AND source_table_full_name IS NOT NULL\n  AND source_type IN ('TABLE', 'STREAMING_TABLE');","parameters":[{"displayName":"date_range_start","keyword":"date_range_start","dataType":"DATETIME","defaultSelection":{"values":{"dataType":"DATETIME","values":[{"value":"now-30d/d"}]}}},{"displayName":"date_range_end","keyword":"date_range_end","dataType":"DATETIME","defaultSelection":{"values":{"dataType":"DATETIME","values":[{"value":"now/s"}]}}}]},{"name":"90d7e6f1","displayName":"Count of Unique Users with Table Read/Write Event","query":"SELECT \n  COUNT(DISTINCT created_by) AS distinct_users\n\nFROM \n  system.access.table_lineage AS tl\n\nWHERE \n  event_time >= :date_range_start\n  AND event_time <= :date_range_end\n  AND (source_table_full_name IS NOT NULL);","parameters":[{"displayName":"date_range_start","keyword":"date_range_start","dataType":"DATETIME","defaultSelection":{"values":{"dataType":"DATETIME","values":[{"value":"now-30d/d"}]}}},{"displayName":"date_range_end","keyword":"date_range_end","dataType":"DATETIME","defaultSelection":{"values":{"dataType":"DATETIME","values":[{"value":"now/s"}]}}}]},{"name":"628c2773","displayName":"Count of Unsecured Tables","query":"SELECT \n    COUNT(DISTINCT CONCAT(TABLE_CATALOG, '.', TABLE_SCHEMA, '.', TABLE_NAME)) AS full_name_count\nFROM \n    system.information_schema.table_privileges\nWHERE \n    grantee = 'account users' \n    AND privilege_type = 'SELECT';"},{"name":"1f951287","displayName":"Count of Sensitive Tables","query":"SELECT COUNT(DISTINCT CONCAT(table_catalog, '.', table_schema, '.', table_name)) AS distinct_table_count\nFROM (\n    SELECT \n        table_catalog, table_schema, table_name\n    FROM \n        system.information_schema.column_masks\n\n    UNION\n\n    SELECT \n        table_catalog, table_schema, table_name\n    FROM \n        system.information_schema.row_filters\n) AS combined;\n"},{"name":"913b3827","displayName":"Pie Chart of Tagged vs. Untagged Tables","query":"WITH tagged_count AS (\n    SELECT COUNT(*) AS count FROM system.information_schema.table_tags\n)\nSELECT 'Tagged' AS label, count \nFROM tagged_count\nUNION ALL\nSELECT 'Untagged' AS label, \n       (SELECT COUNT(*) FROM system.information_schema.tables) - count \nFROM tagged_count;"},{"name":"788914b8","displayName":"Bar Chart of Popular Tags","query":"SELECT \n  tag_name,\n  COUNT(*) AS usage_count\nFROM \n  system.information_schema.table_tags\nWHERE \n  tag_name IS NOT NULL\nGROUP BY \n  tag_name\nORDER BY \n  usage_count DESC\nLIMIT 10;"},{"name":"8d97349c","displayName":"Usage Over Last Year","query":"SELECT \n    DATE_TRUNC('month', event_time) AS usage_date,\n    COUNT(*) AS usage_count\nFROM \n    system.access.table_lineage\nWHERE \n    (event_time >= :date_range_start AND event_time <= :date_range_end )\nGROUP BY \n    usage_date\nORDER BY\n    usage_date;","parameters":[{"displayName":"date_range_start","keyword":"date_range_start","dataType":"DATETIME","defaultSelection":{"values":{"dataType":"DATETIME","values":[{"value":"now-12M/M"}]}}},{"displayName":"date_range_end","keyword":"date_range_end","dataType":"DATETIME","defaultSelection":{"values":{"dataType":"DATETIME","values":[{"value":"now/s"}]}}}]},{"name":"763a2da9","displayName":"Most Popular Tables with Staleness","query":"WITH TableReads AS (\n    SELECT\n        CONCAT(source_table_catalog, '.', source_table_schema, '.', source_table_name) AS table_full_name,\n        COUNT(*) AS read_count\n    FROM\n        system.access.table_lineage\n    WHERE\n        source_table_catalog IS NOT NULL\n        AND :date_range_start <= event_date AND event_date <= :date_range_end\n    GROUP BY\n        table_full_name\n),\nLatestTargetDate AS (\n    SELECT\n        CONCAT(target_table_catalog, '.', target_table_schema, '.', target_table_name) AS table_full_name,\n        MAX(event_date) AS latest_target_date\n    FROM\n        system.access.table_lineage\n    WHERE\n        target_table_catalog IS NOT NULL\n    GROUP BY\n        table_full_name\n)\nSELECT\n    tr.table_full_name,\n    tr.read_count,\n    COALESCE(ltd.latest_target_date, 'N/A') AS latest_target_date\nFROM\n    TableReads tr\nLEFT JOIN\n    LatestTargetDate ltd ON tr.table_full_name = ltd.table_full_name\nORDER BY\n    tr.read_count DESC\nLIMIT 10;\n","parameters":[{"displayName":"date_range_start","keyword":"date_range_start","dataType":"DATETIME","defaultSelection":{"values":{"dataType":"DATETIME","values":[{"value":"now-30d/d"}]}}},{"displayName":"date_range_end","keyword":"date_range_end","dataType":"DATETIME","defaultSelection":{"values":{"dataType":"DATETIME","values":[{"value":"now/s"}]}}}]},{"name":"5ed9b6e5","displayName":"Score","query":"SELECT \n  \"RAW Data Governance\",\n  CASE \n    WHEN (SELECT COUNT(*) FROM system.information_schema.volumes) > 10 \n    THEN \"8/10\" \n    WHEN (SELECT COUNT(*) FROM system.information_schema.volumes) > 5 \n    THEN \"5/10\" \n    ELSE \"0\" \n  END\n  as SCORE\n\n  UNION\n\n  SELECT \n  \"Procedural Governance\",\n  CASE \n    WHEN (SELECT COUNT(*) FROM system.information_schema.routines) > 10 \n    THEN \"10/10\" \n    WHEN (SELECT COUNT(*) FROM system.information_schema.routines) > 5 \n    THEN \"5/10\" \n    ELSE \"0/10\" \n  END\n\n  UNION\n\n--    SELECT \n--   \"Permission Coverage\",\n--   CASE \n--     WHEN (SELECT \n--     COUNT(DISTINCT CONCAT(TABLE_CATALOG, '.', TABLE_SCHEMA, '.', TABLE_NAME))t\n-- FROM \n--     system.information_schema.table_privileges \n-- WHERE \n--     grantee = 'account users' \n--     AND privilege_type = 'SELECT' limit 10) > 1\n--     THEN\n--     0 \n\n--     ELSE 10 \n--   END\n\n--   UNION \n\n  SELECT \n  \"TAG Governance\",\n  CASE \n    WHEN (SELECT COUNT(*) FROM system.information_schema.column_tags) > 10 \n    THEN \"10/10\" \n    WHEN (SELECT COUNT(*) FROM system.information_schema.column_tags) > 5 \n    THEN \"5/10\" \n    ELSE \"0/10\" \n  END\n\n\n"},{"name":"1eab9fe1","displayName":"waf_controls_g","query":"SELECT\n  waf_id,\n  pillar,\n  principle,\n  description,\n  check_type,\n  source_object,\n  CASE \n    WHEN waf_id = 'DG-01-03' AND EXISTS (\n      SELECT 1 FROM system.access.table_lineage LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'DG-01-04' AND EXISTS (\n      SELECT 1 FROM system.information_schema.columns WHERE comment IS NOT NULL LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'DG-01-05' AND EXISTS (\n      SELECT 1 FROM system.information_schema.table_tags LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'DG-02-01' AND EXISTS (\n      SELECT 1 FROM system.information_schema.row_filters LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'DG-02-02' AND EXISTS (\n      SELECT 1 FROM system.access.audit LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'DG-02-03' AND EXISTS (\n      SELECT 1 FROM system.marketplace.listing_access_events LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'DG-03-02' AND EXISTS (\n      SELECT 1 FROM system.information_schema.tables \n      WHERE table_name LIKE '%_drift_metrics' OR table_name LIKE '%_profile_metrics' \n      LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'DG-03-03' AND EXISTS (\n      SELECT 1 FROM system.information_schema.tables \n      WHERE table_type = 'BASE TABLE'\n      LIMIT 1\n    ) THEN 'Yes'\n    ELSE 'No'\n  END AS implemented\nFROM (\n  SELECT * FROM VALUES\n    ('DG-01-03', 'Data & AI Governance', 'Unify data and AI management', 'Track data and AI lineage', 'AUTO', 'system.access.table_lineage'),\n    ('DG-01-04', 'Data & AI Governance', 'Unify data and AI management', 'Add comments to metadata', 'AUTO', 'system.information_schema.columns'),\n    ('DG-01-05', 'Data & AI Governance', 'Unify data and AI management', 'Enable easy data discovery', 'AUTO', 'system.information_schema.table_tags'),\n    ('DG-02-01', 'Data & AI Governance', 'Unify data and AI security', 'Centralize access control (row/column level)', 'AUTO', 'system.information_schema.row_filters'),\n    ('DG-02-02', 'Data & AI Governance', 'Unify data and AI security', 'Configure audit logging', 'AUTO', 'system.access.audit'),\n    ('DG-02-03', 'Data & AI Governance', 'Unify data and AI security', 'Audit data platform events', 'AUTO', 'system.marketplace.listing_access_events'),\n    ('DG-03-02', 'Data & AI Governance', 'Establish data quality standards', 'Use data quality tools and profiling', 'PATTERN', 'system.information_schema.tables'),\n    ('DG-03-03', 'Data & AI Governance', 'Establish data quality standards', 'Enforce standardized data formats', 'AUTO', 'system.information_schema.tables')\n  AS waf(waf_id, pillar, principle, description, check_type, source_object)\n) waf\n"},{"name":"95258030","displayName":"waf_principal_percentage_g","query":"WITH waf_status AS (\n  SELECT\n    waf_id,\n    principle,\n    CASE \n      WHEN waf_id = 'DG-01-03' AND EXISTS (\n        SELECT 1 FROM system.access.table_lineage LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'DG-01-04' AND EXISTS (\n        SELECT 1 FROM system.information_schema.columns WHERE comment IS NOT NULL LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'DG-01-05' AND EXISTS (\n        SELECT 1 FROM system.information_schema.table_tags LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'DG-02-01' AND EXISTS (\n        SELECT 1 FROM system.information_schema.row_filters LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'DG-02-02' AND EXISTS (\n        SELECT 1 FROM system.access.audit LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'DG-02-03' AND EXISTS (\n        SELECT 1 FROM system.marketplace.listing_access_events LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'DG-03-02' AND EXISTS (\n        SELECT 1 FROM system.information_schema.tables \n        WHERE table_name LIKE '%_drift_metrics' OR table_name LIKE '%_profile_metrics' \n        LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'DG-03-03' AND EXISTS (\n        SELECT 1 FROM system.information_schema.tables \n        WHERE table_type = 'BASE TABLE'\n        LIMIT 1\n      ) THEN 'Yes'\n      ELSE 'No'\n    END AS implemented\n  FROM (\n    SELECT * FROM VALUES\n      ('DG-01-03', 'Unify data and AI management'),\n      ('DG-01-04', 'Unify data and AI management'),\n      ('DG-01-05', 'Unify data and AI management'),\n      ('DG-02-01', 'Unify data and AI security'),\n      ('DG-02-02', 'Unify data and AI security'),\n      ('DG-02-03', 'Unify data and AI security'),\n      ('DG-03-02', 'Establish data quality standards'),\n      ('DG-03-03', 'Establish data quality standards')\n    AS waf(waf_id, principle)\n  )\n)\n\nSELECT\n  principle,\n  COUNT(*) AS total_controls,\n  SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) AS implemented_controls,\n  ROUND(100 * SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) / COUNT(*), 0) AS completion_percent\nFROM waf_status\nGROUP BY principle\nORDER BY principle\n"},{"name":"920a8759","displayName":"total_percentage_g","query":"WITH waf_status AS (\n  SELECT\n    waf_id,\n    CASE \n      WHEN waf_id = 'DG-01-03' AND EXISTS (\n        SELECT 1 FROM system.access.table_lineage LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'DG-01-04' AND EXISTS (\n        SELECT 1 FROM system.information_schema.columns WHERE comment IS NOT NULL LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'DG-01-05' AND EXISTS (\n        SELECT 1 FROM system.information_schema.table_tags LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'DG-02-01' AND EXISTS (\n        SELECT 1 FROM system.information_schema.row_filters LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'DG-02-02' AND EXISTS (\n        SELECT 1 FROM system.access.audit LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'DG-02-03' AND EXISTS (\n        SELECT 1 FROM system.marketplace.listing_access_events LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'DG-03-02' AND EXISTS (\n        SELECT 1 FROM system.information_schema.tables \n        WHERE table_name LIKE '%_drift_metrics' OR table_name LIKE '%_profile_metrics' \n        LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'DG-03-03' AND EXISTS (\n        SELECT 1 FROM system.information_schema.tables \n        WHERE table_type = 'BASE TABLE'\n        LIMIT 1\n      ) THEN 'Yes'\n      ELSE 'No'\n    END AS implemented\n  FROM (\n    SELECT * FROM VALUES\n      ('DG-01-03'), ('DG-01-04'), ('DG-01-05'),\n      ('DG-02-01'), ('DG-02-02'), ('DG-02-03'),\n      ('DG-03-02'), ('DG-03-03')\n    AS waf(waf_id)\n  )\n)\n\nSELECT\n  COUNT(*) AS total_controls,\n  SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) AS implemented_controls,\n  ROUND(100 * SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) / COUNT(*), 0) AS completion_percent\nFROM waf_status\n"},{"name":"c19487ca","displayName":"waf_controls_i","query":"SELECT\n  waf_id,\n  principle,\n  practice,\n  source_object,\n  CASE \n    WHEN waf_id = 'IU-01-01' AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE usage_type = 'API_OPERATION' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'IU-01-02' AND EXISTS (\n      SELECT 1 FROM system.information_schema.connections LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'IU-01-03' AND EXISTS (\n      SELECT 1 FROM system.access.audit WHERE action_name LIKE '%PartnerConnection%' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'IU-02-01' AND EXISTS (\n      SELECT 1 FROM system.information_schema.tables WHERE data_source_format = 'DELTA' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'IU-02-02' AND EXISTS (\n      SELECT 1 FROM system.access.audit WHERE action_name LIKE '%DeltaSharing%' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'IU-02-03' AND EXISTS (\n      SELECT 1 --Currently in Private preview -- FROM system.mlflow.experiments_latest LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'IU-03-01' AND EXISTS (\n      SELECT catalog_owner, COUNT(*) FROM system.information_schema.catalogs GROUP BY catalog_owner HAVING COUNT(*) > 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'IU-03-02' AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE usage_type LIKE '%SERVERLESS%' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'IU-03-03' AND EXISTS (\n      SELECT 1 FROM system.compute.clusters WHERE policy_id IS NOT NULL LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'IU-03-04' AND EXISTS (\n      SELECT 1 FROM system.access.assistant_events LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'IU-04-03' AND EXISTS (\n      SELECT 1 FROM system.access.table_lineage LIMIT 1\n    ) THEN 'Yes'\n    ELSE 'No'\n  END AS implemented\nFROM (\n  SELECT * FROM VALUES\n    ('IU-01-01', 'Define standards for integration', 'Use standard and reusable integration patterns', 'system.billing.usage'),\n    ('IU-01-02', 'Define standards for integration', 'Use optimized connectors to ingest data sources', 'system.information_schema.connections'),\n    ('IU-01-03', 'Define standards for integration', 'Use certified partner tools', 'system.access.audit'),\n    ('IU-02-01', 'Utilize open interfaces and data formats', 'Use open data formats', 'system.information_schema.tables'),\n    ('IU-02-02', 'Utilize open interfaces and data formats', 'Enable secure data sharing', 'system.access.audit'),\n    ('IU-02-03', 'Utilize open interfaces and data formats', 'Use open standards for AI workflows', 'system.mlflow.experiments_latest'),\n    ('IU-03-01', 'Simplify new use case implementation', 'Provide a self-service experience', 'system.information_schema.catalogs'),\n    ('IU-03-02', 'Simplify new use case implementation', 'Use serverless services', 'system.billing.usage'),\n    ('IU-03-03', 'Simplify new use case implementation', 'Use pre-defined compute templates', 'system.compute.clusters'),\n    ('IU-03-04', 'Simplify new use case implementation', 'Use AI productivity tools', 'system.assistant.usage'),\n    ('IU-04-03', 'Ensure data consistency and usability', 'Provide central catalog for discovery and lineage', 'system.access.table_lineage')\n) waf(waf_id, principle, practice, source_object);\n"},{"name":"83c64453","displayName":"waf_principal_percentage_i","query":"WITH waf_status AS (\n  SELECT\n    waf_id,\n    principle,\n    practice,\n    description,\n    CASE \n      WHEN waf_id = 'IU-01-01' AND EXISTS (SELECT 1 FROM system.billing.usage WHERE usage_type = 'API_OPERATION' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-01-02' AND EXISTS (SELECT 1 FROM system.information_schema.connections LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-01-03' AND EXISTS (SELECT 1 FROM system.access.audit WHERE action_name LIKE '%PartnerConnection%' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-02-01' AND EXISTS (SELECT 1 FROM system.information_schema.tables WHERE data_source_format = 'DELTA' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-02-02' AND EXISTS (SELECT 1 FROM system.access.audit WHERE action_name LIKE '%DeltaSharing%' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-02-03' AND EXISTS (SELECT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-03-01' AND EXISTS (SELECT catalog_owner, COUNT(DISTINCT catalog_owner) FROM system.information_schema.catalogs GROUP BY catalog_owner HAVING COUNT(*) > 1) THEN 'Yes'\n      WHEN waf_id = 'IU-03-02' AND EXISTS (SELECT 1 FROM system.billing.usage WHERE usage_type LIKE '%SERVERLESS%' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-03-03' AND EXISTS (SELECT 1 FROM system.compute.clusters WHERE policy_id IS NOT NULL LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-03-04' AND EXISTS (SELECT 1 FROM system.access.assistant_events LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-04-03' AND EXISTS (SELECT 1 FROM system.access.table_lineage LIMIT 1) THEN 'Yes'\n      ELSE 'No'\n    END AS implemented\n  FROM (\n    SELECT * FROM VALUES\n      ('IU-01-01', 'Define standards for integration', 'Use standard and reusable integration patterns', 'Tracks usage of REST API, SDKs, CLI for external integration'),\n      ('IU-01-02', 'Define standards for integration', 'Use optimized connectors to ingest data sources (Federation)', 'Monitors federated connectors to external sources'),\n      ('IU-01-03', 'Define standards for integration', 'Use certified partner tools', 'Captures Partner Connect actions from audit logs'),\n      ('IU-02-01', 'Utilize open interfaces and data formats', 'Use open data formats (Delta)', 'Verifies use of Delta tables'),\n      ('IU-02-02', 'Utilize open interfaces and data formats', 'Enable secure data sharing (Delta Sharing)', 'Detects Delta Sharing usage from audit events'),\n      ('IU-02-03', 'Utilize open interfaces and data formats', 'Use open standards for AI workflows (MLflow)', 'Checks MLflow experiments and runs in system tables'),\n      ('IU-03-01', 'Simplify new use case implementation', 'Provide a self-service experience across the platform', 'Indicates multi-catalog ownership for self-service structure'),\n      ('IU-03-02', 'Simplify new use case implementation', 'Use serverless services', 'Confirms serverless workloads in billing logs'),\n      ('IU-03-03', 'Simplify new use case implementation', 'Use pre-defined compute templates (Cluster Policies)', 'Validates cluster policy usage'),\n      ('IU-03-04', 'Simplify new use case implementation', 'Use AI productivity tools (Databricks Assistant)', 'Shows Assistant usage through interaction logs'),\n      ('IU-04-03', 'Ensure data consistency and usability', 'Provide central catalog for discovery and lineage', 'Validates presence of lineage and shared catalogs')\n    AS waf(waf_id, principle, practice, description)\n  )\n)\n\nSELECT\n  principle,\n  COUNT(*) AS total_controls,\n  SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) AS implemented_controls,\n  ROUND(100 * SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) / COUNT(*), 0) AS completion_percent\nFROM waf_status\nGROUP BY principle\nORDER BY principle"},{"name":"05c16819","displayName":"total_percentage_i","query":"WITH waf_status AS (\n  SELECT\n    waf_id,\n    CASE \n      WHEN waf_id = 'IU-01-01' AND EXISTS (SELECT 1 FROM system.billing.usage WHERE usage_type = 'API_OPERATION' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-01-02' AND EXISTS (SELECT 1 FROM system.information_schema.connections LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-01-03' AND EXISTS (SELECT 1 FROM system.access.audit WHERE action_name LIKE '%PartnerConnection%' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-02-01' AND EXISTS (SELECT 1 FROM system.information_schema.tables WHERE data_source_format = 'DELTA' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-02-02' AND EXISTS (SELECT 1 FROM system.access.audit WHERE action_name LIKE '%DeltaSharing%' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-02-03' AND EXISTS (SELECT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-03-01' AND EXISTS (SELECT catalog_owner, COUNT(DISTINCT catalog_owner) FROM system.information_schema.catalogs GROUP BY catalog_owner HAVING COUNT(*) > 1) THEN 'Yes'\n      WHEN waf_id = 'IU-03-02' AND EXISTS (SELECT 1 FROM system.billing.usage WHERE usage_type LIKE '%SERVERLESS%' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-03-03' AND EXISTS (SELECT 1 FROM system.compute.clusters WHERE policy_id IS NOT NULL LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-03-04' AND EXISTS (SELECT 1 FROM system.access.assistant_events LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-04-03' AND EXISTS (SELECT 1 FROM system.access.table_lineage LIMIT 1) THEN 'Yes'\n      ELSE 'No'\n    END AS implemented\n  FROM (\n    SELECT * FROM VALUES\n      ('IU-01-01'), ('IU-01-02'), ('IU-01-03'),\n      ('IU-02-01'), ('IU-02-02'), ('IU-02-03'),\n      ('IU-03-01'), ('IU-03-02'), ('IU-03-03'), ('IU-03-04'),\n      ('IU-04-03')\n    AS waf(waf_id)\n  )\n)\n\nSELECT\n  COUNT(*) AS total_controls,\n  SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) AS implemented_controls,\n  ROUND(100 * SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) / COUNT(*), 0) AS completion_percent\nFROM waf_status;"},{"name":"b39d7f91","displayName":"total_percentage_across_pillars","query":"WITH waf_status AS (\n  SELECT\n    waf_id,\n    CASE \n      WHEN waf_id = 'IU-01-01' AND EXISTS (SELECT 1 FROM system.billing.usage WHERE usage_type = 'API_OPERATION' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-01-02' AND EXISTS (SELECT 1 FROM system.information_schema.connections LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-01-03' AND EXISTS (SELECT 1 FROM system.access.audit WHERE action_name LIKE '%PartnerConnection%' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-02-01' AND EXISTS (SELECT 1 FROM system.information_schema.tables WHERE data_source_format = 'DELTA' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-02-02' AND EXISTS (SELECT 1 FROM system.access.audit WHERE action_name LIKE '%DeltaSharing%' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-02-03' AND EXISTS (SELECT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-03-01' AND EXISTS (SELECT catalog_owner, COUNT(DISTINCT catalog_owner) FROM system.information_schema.catalogs GROUP BY catalog_owner HAVING COUNT(*) > 1) THEN 'Yes'\n      WHEN waf_id = 'IU-03-02' AND EXISTS (SELECT 1 FROM system.billing.usage WHERE usage_type LIKE '%SERVERLESS%' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-03-03' AND EXISTS (SELECT 1 FROM system.compute.clusters WHERE policy_id IS NOT NULL LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-03-04' AND EXISTS (SELECT 1 FROM system.access.assistant_events LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-04-03' AND EXISTS (SELECT 1 FROM system.access.table_lineage LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'DG-01-03' AND EXISTS (SELECT 1 FROM system.access.table_lineage LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'DG-01-04' AND EXISTS (SELECT 1 FROM system.information_schema.columns WHERE comment IS NOT NULL LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'DG-01-05' AND EXISTS (SELECT 1 FROM system.information_schema.table_tags LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'DG-02-01' AND EXISTS (SELECT 1 FROM system.information_schema.row_filters LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'DG-02-02' AND EXISTS (SELECT 1 FROM system.access.audit LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'DG-02-03' AND EXISTS (SELECT 1 FROM system.marketplace.listing_access_events LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'DG-03-02' AND EXISTS (SELECT 1 FROM system.information_schema.tables WHERE table_name LIKE '%_drift_metrics' OR table_name LIKE '%_profile_metrics' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'DG-03-03' AND EXISTS (SELECT 1 FROM system.information_schema.tables WHERE table_type = 'BASE TABLE' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'CO-01-01' AND EXISTS (SELECT 1 FROM system.information_schema.tables WHERE data_source_format = 'DELTA' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'CO-01-03' AND EXISTS (SELECT 1 FROM system.billing.usage WHERE usage_type LIKE '%SQL%' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'CO-01-04' AND EXISTS (SELECT 1 FROM system.compute.clusters WHERE dbr_version IS NOT NULL LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'CO-01-06' AND EXISTS (SELECT 1 FROM system.billing.usage WHERE usage_type LIKE '%SERVERLESS%' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'CO-01-09' AND EXISTS (SELECT 1 FROM system.billing.usage WHERE product_features.is_photon = true LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'CO-02-03' AND EXISTS (SELECT 1 FROM system.compute.clusters WHERE policy_id IS NOT NULL LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'CO-03-01' AND EXISTS (SELECT 1 FROM system.billing.usage LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'CO-03-02' AND EXISTS (SELECT 1 FROM system.compute.clusters WHERE size(map_keys(tags)) > 0 LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'CO-03-03' AND EXISTS (SELECT 1 FROM system.billing.usage LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'PE-01-01' AND EXISTS (SELECT 1 FROM system.billing.usage WHERE usage.sku_name LIKE '%JOBS_SERVERLESS_COMPUTE%' OR usage.sku_name LIKE '%SERVERLESS_SQL%' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'PE-01-02' AND EXISTS (SELECT 1 FROM system.billing.usage WHERE usage.sku_name LIKE '%SERVERLESS_REAL_TIME_INFERENCE%' LIMIT 1 ) THEN 'Yes'\n      WHEN waf_id = 'PE-02-02' AND EXISTS (SELECT 1 FROM system.compute.clusters WHERE worker_count > 1 LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'PE-02-04' AND EXISTS (SELECT 1 FROM system.compute.clusters WHERE worker_count > 3 LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'PE-02-05' AND NOT EXISTS (SELECT 1 FROM system.information_schema.routines WHERE external_language = 'Python' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'PE-02-06' AND EXISTS (SELECT 1 FROM system.billing.usage WHERE billing_origin_product IN ('ALL_PURPOSE','JOBS','DLT') AND product_features.is_photon = true LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'PE-02-07' AND EXISTS (SELECT 1 FROM system.compute.clusters HAVING COUNT(DISTINCT split(worker_node_type,'[.]')[0])/COUNT(1) >= 0.05) THEN 'Yes'\n      WHEN waf_id = 'R-01-01' AND EXISTS (SELECT 1 FROM system.information_schema.tables WHERE data_source_format IN  ('DELTA','ICEBERG') LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'R-01-02' THEN 'Yes'\n      WHEN waf_id IN ('R-01-03','R-02-04') AND EXISTS (SELECT 1 FROM system.billing.usage WHERE billing_origin_product = 'DLT' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'R-01-05' AND EXISTS (SELECT 1 FROM system.billing.usage WHERE billing_origin_product = 'MODEL_SERVING' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'R-01-06' AND EXISTS (SELECT 1 FROM system.billing.usage WHERE sku_name LIKE '%SERVERLESS%' OR sku_name LIKE '%DLT%' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'R-02-03' AND EXISTS (SELECT 1 FROM system.information_schema.metastores LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'R-03-01' AND EXISTS (SELECT 1 FROM system.compute.clusters WHERE ifnull(max_autoscale_Workers,0) > 0 LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'R-03-02' AND EXISTS (SELECT 1 FROM system.compute.warehouses where max_clusters - min_clusters > 0 LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'SCP-01-06' AND EXISTS (SELECT 1 FROM system.access.audit WHERE action_name = 'mintOAuthToken' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'SCP-01-11' AND EXISTS (SELECT 1 FROM FROM system.access.audit WHERE action_name IN ('workspaceInHouseOAuthClientAuthentication', 'mintOAuthAuthorizationCode') LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'SCP-01-12' AND EXISTS (SELECT 1 FROM system.compute.clusters WHERE data_security_mode = \"USER_ISOLATION\" LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'SCP-02-01' AND NOT EXISTS (SELECT 1 FROM system.information_schema.tables WHERE storage_path LIKE 'dbfs:/%' OR storage_path LIKE '/dbfs/%' LIMIT 1) THEN 'Yes'\n      WHEN waf_id IN ('SCP-02-03', 'SCP-03-03') AND EXISTS (SELECT 1 FROM system.access.outbound_network LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'SCP-06-01' AND EXISTS (SELECT 1 FROM system.query.history where lower(statement_text) LIKE '%system.%' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'SCP-06-02' AND EXISTS (SELECT 1 FROM system.query.history where lower(statement_text) LIKE '%system.access.audit%' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'SCP-06-03' AND EXISTS (SELECT 1 FROM system.query.history where lower(statement_text) LIKE '%system.compute.clusters%' AND lower(statement_text) LIKE '%create_time%'  LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'SCP-06-05' AND EXISTS (SELECT 1 FROM system.compute.clusters where cardinality(tags) > 0 LIMIT 1) THEN 'Yes'\n      ELSE 'No'\n    END AS implemented,\n    CASE \n      WHEN waf_id LIKE 'IU-%' THEN 'Interoperability & Usability'\n      WHEN waf_id LIKE 'DG-%' THEN 'Data & AI Governance'\n      WHEN waf_id LIKE 'CO-%' THEN 'Cost Optimization'\n      WHEN waf_id LIKE 'PE-%' THEN 'Performance Efficiency'\n      WHEN waf_id LIKE 'R-%'  THEN 'Reliability'\n      WHEN waf_id LIKE 'SCP-%' THEN 'Security, Compliance and Privacy'\n    END AS pillar\n  FROM (\n    SELECT * FROM VALUES\n      ('IU-01-01'), ('IU-01-02'), ('IU-01-03'),\n      ('IU-02-01'), ('IU-02-02'), ('IU-02-03'),\n      ('IU-03-01'), ('IU-03-02'), ('IU-03-03'), ('IU-03-04'),\n      ('IU-04-03'),\n      ('DG-01-03'), ('DG-01-04'), ('DG-01-05'),\n      ('DG-02-01'), ('DG-02-02'), ('DG-02-03'),\n      ('DG-03-02'), ('DG-03-03'),\n      ('CO-01-01'), ('CO-01-03'), ('CO-01-04'), ('CO-01-06'), ('CO-01-09'),\n      ('CO-02-03'), ('CO-03-01'), ('CO-03-02'), ('CO-03-03'),\n      ('PE-01-01'),('PE-01-02'),\n      ('PE-02-02'),('PE-02-04'),('PE-02-05'),('PE-02-06'),('PE-02-07'),\n      ('R-01-01'),('R-01-02'),('R-01-03'),('R-01-04'),('R-01-05'),('R-01-06'),\n      ('R-02-03'),('R-02-04'),\n      ('R-03-01'),('R-03-02'),\n      ('SCP-01-06'), ('SCP-01-11'),('SCP-01-12'),\n      ('SCP-02-01'),('SCP-02-03'),\n      ('SCP-03-03'),\n      ('SCP-06-01'),('SCP-06-02'),('SCP-06-03'),('SCP-06-05')\n    AS waf(waf_id)\n  )\n)\n\nSELECT\n  pillar,\n  COUNT(*) AS total_controls,\n  SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) AS implemented_controls,\n  ROUND(100 * SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) / COUNT(*), 0) AS completion_percent\nFROM waf_status\nGROUP BY pillar;\n"},{"name":"dbdc9433","displayName":"waf_controls_c","query":"SELECT\n  waf_id,\n  principle,\n  best_practice,\n  CASE \n    WHEN waf_id = 'CO-01-01' AND EXISTS (\n      SELECT 1 FROM system.information_schema.tables WHERE data_source_format = 'DELTA' LIMIT 1\n    ) THEN 'Yes'\n    -- WHEN waf_id = 'CO-01-02' AND EXISTS (\n    --   SELECT 1 FROM system.lakeflow.job_task_run_timeline JOIN system.compute.clusters USING (cluster_id)\n    --   WHERE is_interactive = false LIMIT 1\n    -- ) THEN 'Yes'\n    WHEN waf_id = 'CO-01-03' AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE usage_type LIKE '%SQL%' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'CO-01-04' AND EXISTS (\n      SELECT 1 FROM system.compute.clusters WHERE dbr_version IS NOT NULL LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'CO-01-06' AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE usage_type LIKE '%SERVERLESS%' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'CO-01-09' AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE product_features.is_photon = true LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'CO-02-03' AND EXISTS (\n      SELECT 1 FROM system.compute.clusters WHERE policy_id IS NOT NULL LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'CO-03-01' AND EXISTS (\n      SELECT 1 FROM system.billing.usage LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'CO-03-02' AND EXISTS (\n      SELECT 1 FROM system.compute.clusters WHERE size(map_keys(tags)) > 0 LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'CO-03-03' AND EXISTS (\n      SELECT 1 FROM system.billing.usage LIMIT 1\n    ) THEN 'Yes'\n    ELSE 'No'\n  END AS implemented\nFROM (\n  SELECT * FROM VALUES\n    ('CO-01-01', 'Choose optimal resources', 'Use performance optimized data formats'),\n    --('CO-01-02', 'Choose optimal resources', 'Use job clusters'),\n    ('CO-01-03', 'Choose optimal resources', 'Use SQL warehouse for SQL workloads'),\n    ('CO-01-04', 'Choose optimal resources', 'Use up-to-date runtimes'),\n    ('CO-01-06', 'Choose optimal resources', 'Use Serverless for your workloads'),\n    ('CO-01-09', 'Choose optimal resources', 'Evaluate performance optimized query engines'),\n    ('CO-02-03', 'Dynamically allocate resources', 'Use compute policies to control costs'),\n    ('CO-03-01', 'Monitor and control cost', 'Monitor costs'),\n    ('CO-03-02', 'Monitor and control cost', 'Tag clusters for cost attribution'),\n    ('CO-03-03', 'Monitor and control cost', 'Implement observability to track & chargeback cost')\n) waf(waf_id, principle, best_practice);\n"},{"name":"81f0a6aa","displayName":"waf_principal_percentage_c","query":"WITH waf_status AS (\n  SELECT\n    waf_id,\n    principle,\n    CASE \n      WHEN waf_id = 'CO-01-01' AND EXISTS (\n        SELECT 1 FROM system.information_schema.tables WHERE data_source_format = 'DELTA' LIMIT 1\n      ) THEN 'Yes'\n      -- WHEN waf_id = 'CO-01-02' AND EXISTS (\n      --   SELECT 1 FROM system.lakeflow.job_task_run_timeline JOIN system.compute.clusters USING (cluster_id)\n      --   WHERE is_interactive = false LIMIT 1\n      -- ) THEN 'Yes'\n      WHEN waf_id = 'CO-01-03' AND EXISTS (\n        SELECT 1 FROM system.billing.usage WHERE usage_type LIKE '%SQL%' LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'CO-01-04' AND EXISTS (\n        SELECT 1 FROM system.compute.clusters WHERE dbr_version IS NOT NULL LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'CO-01-06' AND EXISTS (\n        SELECT 1 FROM system.billing.usage WHERE usage_type LIKE '%SERVERLESS%' LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'CO-01-09' AND EXISTS (\n        SELECT 1 FROM system.billing.usage WHERE product_features.is_photon = true LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'CO-02-03' AND EXISTS (\n        SELECT 1 FROM system.compute.clusters WHERE policy_id IS NOT NULL LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'CO-03-01' AND EXISTS (\n        SELECT 1 FROM system.billing.usage LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'CO-03-02' AND EXISTS (\n        SELECT 1 FROM system.compute.clusters WHERE size(map_keys(tags)) > 0 LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'CO-03-03' AND EXISTS (\n        SELECT 1 FROM system.billing.usage LIMIT 1\n      ) THEN 'Yes'\n      ELSE 'No'\n    END AS implemented\n  FROM (\n    SELECT * FROM VALUES\n      ('CO-01-01', 'Choose optimal resources'),\n      --('CO-01-02', 'Choose optimal resources'),\n      ('CO-01-03', 'Choose optimal resources'),\n      ('CO-01-04', 'Choose optimal resources'),\n      ('CO-01-06', 'Choose optimal resources'),\n      ('CO-01-09', 'Choose optimal resources'),\n      ('CO-02-03', 'Dynamically allocate resources'),\n      ('CO-03-01', 'Monitor and control cost'),\n      ('CO-03-02', 'Monitor and control cost'),\n      ('CO-03-03', 'Monitor and control cost')\n    AS waf(waf_id, principle)\n  )\n)\n\nSELECT\n  principle,\n  COUNT(*) AS total_controls,\n  SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) AS implemented_controls,\n  ROUND(100 * SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) / COUNT(*), 0) AS completion_percent\nFROM waf_status\nGROUP BY principle\nORDER BY principle;\n"},{"name":"06f2987c","displayName":"total_percentage_c","query":"WITH waf_status AS (\n  SELECT\n    waf_id,\n    CASE \n      WHEN waf_id = 'CO-01-01' AND EXISTS (\n        SELECT 1 FROM system.information_schema.tables WHERE data_source_format = 'DELTA' LIMIT 1\n      ) THEN 'Yes'\n      -- WHEN waf_id = 'CO-01-02' AND EXISTS (\n      --   SELECT 1 FROM system.lakeflow.job_task_run_timeline JOIN system.compute.clusters USING (cluster_id)\n      --   WHERE is_interactive = false LIMIT 1\n      -- ) THEN 'Yes'\n      WHEN waf_id = 'CO-01-03' AND EXISTS (\n        SELECT 1 FROM system.billing.usage WHERE usage_type LIKE '%SQL%' LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'CO-01-04' AND EXISTS (\n        SELECT 1 FROM system.compute.clusters WHERE dbr_version IS NOT NULL LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'CO-01-06' AND EXISTS (\n        SELECT 1 FROM system.billing.usage WHERE usage_type LIKE '%SERVERLESS%' LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'CO-01-09' AND EXISTS (\n        SELECT 1 FROM system.billing.usage WHERE product_features.is_photon = true LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'CO-02-03' AND EXISTS (\n        SELECT 1 FROM system.compute.clusters WHERE policy_id IS NOT NULL LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'CO-03-01' AND EXISTS (\n        SELECT 1 FROM system.billing.usage LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'CO-03-02' AND EXISTS (\n        SELECT 1 FROM system.compute.clusters WHERE size(map_keys(tags)) > 0 LIMIT 1\n      ) THEN 'Yes'\n      WHEN waf_id = 'CO-03-03' AND EXISTS (\n        SELECT 1 FROM system.billing.usage LIMIT 1\n      ) THEN 'Yes'\n      ELSE 'No'\n    END AS implemented\n  FROM (\n    SELECT * FROM VALUES\n      ('CO-01-01'),\n      --('CO-01-02'),\n      ('CO-01-03'),\n      ('CO-01-04'),\n      ('CO-01-06'),\n      ('CO-01-09'),\n      ('CO-02-03'),\n      ('CO-03-01'),\n      ('CO-03-02'),\n      ('CO-03-03')\n    AS waf(waf_id)\n  )\n)\n\nSELECT\n  COUNT(*) AS total_controls,\n  SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) AS implemented_controls,\n  ROUND(100 * SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) / COUNT(*), 0) AS completion_percent\nFROM waf_status;\n"},{"name":"2aa3d48a","displayName":"total_percentage_across_pillars 1","query":"WITH waf_status AS (\n  SELECT\n    waf_id,\n    CASE \n      WHEN waf_id = 'IU-01-01' AND EXISTS (SELECT 1 FROM system.billing.usage WHERE usage_type = 'API_OPERATION' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-01-02' AND EXISTS (SELECT 1 FROM system.information_schema.connections LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-01-03' AND EXISTS (SELECT 1 FROM system.access.audit WHERE action_name LIKE '%PartnerConnection%' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-02-01' AND EXISTS (SELECT 1 FROM system.information_schema.tables WHERE data_source_format = 'DELTA' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-02-02' AND EXISTS (SELECT 1 FROM system.access.audit WHERE action_name LIKE '%DeltaSharing%' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-02-03' AND EXISTS (SELECT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-03-01' AND EXISTS (SELECT catalog_owner, COUNT(DISTINCT catalog_owner) FROM system.information_schema.catalogs GROUP BY catalog_owner HAVING COUNT(*) > 1) THEN 'Yes'\n      WHEN waf_id = 'IU-03-02' AND EXISTS (SELECT 1 FROM system.billing.usage WHERE usage_type LIKE '%SERVERLESS%' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-03-03' AND EXISTS (SELECT 1 FROM system.compute.clusters WHERE policy_id IS NOT NULL LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-03-04' AND EXISTS (SELECT 1 FROM system.access.assistant_events LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'IU-04-03' AND EXISTS (SELECT 1 FROM system.access.table_lineage LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'DG-01-03' AND EXISTS (SELECT 1 FROM system.access.table_lineage LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'DG-01-04' AND EXISTS (SELECT 1 FROM system.information_schema.columns WHERE comment IS NOT NULL LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'DG-01-05' AND EXISTS (SELECT 1 FROM system.information_schema.table_tags LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'DG-02-01' AND EXISTS (SELECT 1 FROM system.information_schema.row_filters LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'DG-02-02' AND EXISTS (SELECT 1 FROM system.access.audit LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'DG-02-03' AND EXISTS (SELECT 1 FROM system.marketplace.listing_access_events LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'DG-03-02' AND EXISTS (SELECT 1 FROM system.information_schema.tables WHERE table_name LIKE '%_drift_metrics' OR table_name LIKE '%_profile_metrics' LIMIT 1) THEN 'Yes'\n      WHEN waf_id = 'DG-03-03' AND EXISTS (SELECT 1 FROM system.information_schema.tables WHERE table_type = 'BASE TABLE' LIMIT 1) THEN 'Yes'\n      ELSE 'No'\n    END AS implemented,\n    CASE \n      WHEN waf_id LIKE 'IU-%' THEN 'Interoperability & Usability'\n      WHEN waf_id LIKE 'DG-%' THEN 'Data & AI Governance'\n    END AS pillar\n  FROM (\n    SELECT * FROM VALUES\n      ('IU-01-01'), ('IU-01-02'), ('IU-01-03'),\n      ('IU-02-01'), ('IU-02-02'), ('IU-02-03'),\n      ('IU-03-01'), ('IU-03-02'), ('IU-03-03'), ('IU-03-04'),\n      ('IU-04-03'),\n      ('DG-01-03'), ('DG-01-04'), ('DG-01-05'),\n      ('DG-02-01'), ('DG-02-02'), ('DG-02-03'),\n      ('DG-03-02'), ('DG-03-03')\n    AS waf(waf_id)\n  )\n)\n\nSELECT\n  pillar,\n  COUNT(*) AS total_controls,\n  SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) AS implemented_controls,\n  ROUND(100 * SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) / COUNT(*), 0) AS completion_percent\nFROM waf_status\nGROUP BY pillar;"},{"name":"4745a0f9","displayName":"waf_controls_p","query":"SELECT\n  waf_id,\n  principle,\n  best_practice,\n  CASE \n    WHEN waf_id = 'PE-01-01' AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE usage.sku_name LIKE '%JOBS_SERVERLESS_COMPUTE%' OR usage.sku_name LIKE '%SERVERLESS_SQL%' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'PE-01-02' AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE usage.sku_name LIKE '%SERVERLESS_REAL_TIME_INFERENCE%' LIMIT 1 \n    ) THEN 'Yes'\n--    WHEN waf_id = 'PE-02-01' AND EXISTS (\n--      SELECT 1 FROM system.billing.usage WHERE usage_type LIKE '%SQL%' LIMIT 1\n--    ) THEN 'Yes'\n    WHEN waf_id = 'PE-02-02' AND EXISTS (\n      SELECT 1 FROM system.compute.clusters WHERE worker_count > 1 LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'PE-02-04' AND EXISTS (\n      SELECT 1 FROM system.compute.clusters WHERE worker_count > 3 LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'PE-02-05' AND NOT EXISTS (\n      SELECT 1 FROM system.information_schema.routines WHERE external_language = 'Python' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'PE-02-06' AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE billing_origin_product IN ('ALL_PURPOSE','JOBS','DLT') AND product_features.is_photon = true LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'PE-02-07' AND EXISTS (\n       SELECT 1 FROM system.compute.clusters HAVING COUNT(DISTINCT split(worker_node_type,'[.]')[0])/COUNT(1) >= 0.05 --Look for at least 5% variety in instance families\n    ) THEN 'Yes'\n    ELSE 'No'\n  END AS implemented\nFROM (\n  SELECT * FROM VALUES\n    ('PE-01-01', 'Utilize serverless capabilities', 'Use serverless architecture'),\n    ('PE-01-02', 'Utilize serverless capabilities', 'Use an enterprise grade model serving service'),\n    --('PE-02-01', 'Utilize serverless capabilities', 'Understand your data ingestion and access patterns'),\n    ('PE-02-02', 'Design workloads for performance', 'Use parallel computation where it is beneficial'),\n    --('PE-02-03', 'Design workloads for performance', 'Analyze the whole chain of execution'),\n    ('PE-02-04', 'Design workloads for performance', 'Prefer larger clusters'),\n    ('PE-02-05', 'Design workloads for performance', 'Use native Spark operations'),\n    ('PE-02-06', 'Design workloads for performance', 'Use native platform engines'),\n    ('PE-02-07', 'Design workloads for performance', 'Understand your hardware and workload type')\n    --('PE-02-08', 'Design workloads for performance', 'Use caching'),\n    --('PE-02-09', 'Design workloads for performance', 'Use compaction'),\n) waf(waf_id, principle, best_practice);\n"},{"name":"13e29e6c","displayName":"waf_principal_percentage_p","query":"WITH waf_status AS (\n  SELECT\n    waf_id,\n    principle,\n    CASE \n    WHEN waf_id = 'PE-01-01' AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE usage.sku_name LIKE '%JOBS_SERVERLESS_COMPUTE%' OR usage.sku_name LIKE '%SERVERLESS_SQL%' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'PE-01-02' AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE usage.sku_name LIKE '%SERVERLESS_REAL_TIME_INFERENCE%' LIMIT 1 \n    ) THEN 'Yes'\n--    WHEN waf_id = 'PE-02-01' AND EXISTS (\n--      SELECT 1 FROM system.billing.usage WHERE usage_type LIKE '%SQL%' LIMIT 1\n--    ) THEN 'Yes'\n    WHEN waf_id = 'PE-02-02' AND EXISTS (\n      SELECT 1 FROM system.compute.clusters WHERE worker_count > 1 LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'PE-02-04' AND EXISTS (\n      SELECT 1 FROM system.compute.clusters WHERE worker_count > 3 LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'PE-02-05' AND NOT EXISTS (\n      SELECT 1 FROM system.information_schema.routines WHERE external_language = 'Python' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'PE-02-06' AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE billing_origin_product IN ('ALL_PURPOSE','JOBS','DLT') AND product_features.is_photon = true LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'PE-02-07' AND EXISTS (\n       SELECT 1 FROM system.compute.clusters HAVING COUNT(DISTINCT split(worker_node_type,'[.]')[0])/COUNT(1) >= 0.05 --Look for at least 5% variety in instance families\n    ) THEN 'Yes'\n    ELSE 'No'\n  END AS implemented\n  FROM (\n    SELECT * FROM VALUES\n      ('PE-01-01', 'Utilize serverless capabilities'),\n    ('PE-01-02', 'Utilize serverless capabilities'),\n    --('PE-02-01', 'Utilize serverless capabilities'),\n    ('PE-02-02', 'Design workloads for performance'),\n    --('PE-02-03', 'Design workloads for performance'),\n    ('PE-02-04', 'Design workloads for performance'),\n    ('PE-02-05', 'Design workloads for performance'),\n    ('PE-02-06', 'Design workloads for performance'),\n    ('PE-02-07', 'Design workloads for performance')\n    --('PE-02-08', 'Design workloads for performance'),\n    --('PE-02-09', 'Design workloads for performance'),\n    AS waf(waf_id, principle)\n  )\n)\n\nSELECT\n  principle,\n  COUNT(*) AS total_controls,\n  SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) AS implemented_controls,\n  ROUND(100 * SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) / COUNT(*), 0) AS completion_percent\nFROM waf_status\nGROUP BY principle\nORDER BY principle;\n"},{"name":"87deca0d","displayName":"total_percentage_p","query":"WITH waf_status AS (\n  SELECT\n    waf_id,\n    CASE \n    WHEN waf_id = 'PE-01-01' AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE usage.sku_name LIKE '%JOBS_SERVERLESS_COMPUTE%' OR usage.sku_name LIKE '%SERVERLESS_SQL%' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'PE-01-02' AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE usage.sku_name LIKE '%SERVERLESS_REAL_TIME_INFERENCE%' LIMIT 1 \n    ) THEN 'Yes'\n--    WHEN waf_id = 'PE-02-01' AND EXISTS (\n--      SELECT 1 FROM system.billing.usage WHERE usage_type LIKE '%SQL%' LIMIT 1\n--    ) THEN 'Yes'\n    WHEN waf_id = 'PE-02-02' AND EXISTS (\n      SELECT 1 FROM system.compute.clusters WHERE worker_count > 1 LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'PE-02-04' AND EXISTS (\n      SELECT 1 FROM system.compute.clusters WHERE worker_count > 3 LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'PE-02-05' AND NOT EXISTS (\n      SELECT 1 FROM system.information_schema.routines WHERE external_language = 'Python' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'PE-02-06' AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE billing_origin_product IN ('ALL_PURPOSE','JOBS','DLT') AND product_features.is_photon = true LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'PE-02-07' AND EXISTS (\n       SELECT 1 FROM system.compute.clusters HAVING COUNT(DISTINCT split(worker_node_type,'[.]')[0])/COUNT(1) >= 0.05 --Look for at least 5% variety in instance families\n    ) THEN 'Yes'\n    ELSE 'No'\n  END AS implemented\n  FROM (\n    SELECT * FROM VALUES\n    ('PE-01-01'),\n    ('PE-01-02'),\n    --('PE-02-01'),\n    ('PE-02-02'),\n    --('PE-02-03'),\n    ('PE-02-04'),\n    ('PE-02-05'),\n    ('PE-02-06'),\n    ('PE-02-07')\n    --('PE-02-08'),\n    --('PE-02-09'),\n    AS waf(waf_id)\n  )\n)\n\nSELECT\n  COUNT(*) AS total_controls,\n  SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) AS implemented_controls,\n  ROUND(100 * SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) / COUNT(*), 0) AS completion_percent\nFROM waf_status;\n"},{"name":"e64dd2aa","displayName":"waf_controls_r","query":"SELECT\n  waf_id,\n  principle,\n  best_practice,\n  CASE \n    WHEN waf_id = 'R-01-01' AND EXISTS (\n      SELECT 1 FROM system.information_schema.tables WHERE data_source_format IN  ('DELTA','ICEBERG') LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'R-01-02' THEN 'Yes'\n--    WHEN waf_id = 'R-02-01' AND EXISTS (\n--      SELECT 1 FROM system.billing.usage WHERE usage_type LIKE '%SQL%' LIMIT 1\n--    ) THEN 'Yes'\n    WHEN waf_id IN ('R-01-03','R-02-04') AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE billing_origin_product = 'DLT' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'R-01-05' AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE billing_origin_product = 'MODEL_SERVING' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'R-01-06' AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE sku_name LIKE '%SERVERLESS%' OR sku_name LIKE '%DLT%' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'R-02-03' AND EXISTS (\n      SELECT 1 FROM system.information_schema.metastores LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'R-03-01' AND EXISTS (\n        SELECT 1 FROM system.compute.clusters WHERE ifnull(max_autoscale_Workers,0) > 0 LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'R-03-02' AND EXISTS (\n        SELECT 1 FROM system.compute.warehouses where max_clusters - min_clusters > 0 LIMIT 1\n    ) THEN 'Yes'\n    ELSE 'No'\n  END AS implemented\nFROM (\n  SELECT * FROM VALUES\n    ('R-01-01', 'Design for failure', 'Use a data format that supports ACID transactions'),\n    ('R-01-02', 'Design for failure', 'Use an enterprise grade model serving service'),\n    ('R-01-03', 'Design for failure', 'Automatically rescue invalid or nonconforming data '),\n    --('R-01-04', 'Design for failure', 'Configure jobs for automatic retries and termination'),\n    ('R-01-05', 'Design for failure', 'Use a scalable and production-grade model serving infrastructure'),\n    ('R-01-06', 'Design for failure', 'Use managed services for your workloads'),\n    ('R-02-03', 'Manage data quality', 'Actively manage schemas'),\n    ('R-02-04', 'Manage data quality', 'Use constraints and data expectations'),\n    ('R-03-01', 'Design for autoscaling', 'Enable autoscaling for ETL workloads'),\n    ('R-03-02', 'Design for autoscaling', 'Use autoscaling for SQL Warehouses')\n    --('R-02-09', 'Design workloads for performance', 'Use compaction'),\n) waf(waf_id, principle, best_practice);\n"},{"name":"c027e1dd","displayName":"waf_principal_percentage_r","query":"WITH waf_status AS (\n  SELECT\n    waf_id,\n    principle,\n    CASE \n    WHEN waf_id = 'R-01-01' AND EXISTS (\n      SELECT 1 FROM system.information_schema.tables WHERE data_source_format IN  ('DELTA','ICEBERG') LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'R-01-02' THEN 'Yes'\n--    WHEN waf_id = 'R-02-01' AND EXISTS (\n--      SELECT 1 FROM system.billing.usage WHERE usage_type LIKE '%SQL%' LIMIT 1\n--    ) THEN 'Yes'\n    WHEN waf_id IN ('R-01-03','R-02-04') AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE billing_origin_product = 'DLT' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'R-01-05' AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE billing_origin_product = 'MODEL_SERVING' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'R-01-06' AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE sku_name LIKE '%SERVERLESS%' OR sku_name LIKE '%DLT%' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'R-02-03' AND EXISTS (\n      SELECT 1 FROM system.information_schema.metastores LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'R-03-01' AND EXISTS (\n        SELECT 1 FROM system.compute.clusters WHERE ifnull(max_autoscale_Workers,0) > 0 LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'R-03-02' AND EXISTS (\n        SELECT 1 FROM system.compute.warehouses where max_clusters - min_clusters > 0 LIMIT 1\n    ) THEN 'Yes'\n    ELSE 'No'\n  END AS implemented\n  FROM (\n    SELECT * FROM VALUES\n    ('R-01-01', 'Design for failure'),\n    ('R-01-02', 'Design for failure'),\n    ('R-01-03', 'Design for failure'),\n    --('R-01-04', 'Design for failure'),\n    ('R-01-05', 'Design for failure'),\n    ('R-01-06', 'Design for failure'),\n    ('R-02-03', 'Manage data quality'),\n    ('R-02-04', 'Manage data quality'),\n    ('R-03-01', 'Design for autoscaling'),\n    ('R-03-02', 'Design for autoscaling')\n    AS waf(waf_id, principle)\n  )\n)\n\nSELECT\n  principle,\n  COUNT(*) AS total_controls,\n  SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) AS implemented_controls,\n  ROUND(100 * SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) / COUNT(*), 0) AS completion_percent\nFROM waf_status\nGROUP BY principle\nORDER BY principle;\n"},{"name":"479706d3","displayName":"total_percentage_r","query":"WITH waf_status AS (\n  SELECT\n    waf_id,\n    CASE \n    WHEN waf_id = 'R-01-01' AND EXISTS (\n      SELECT 1 FROM system.information_schema.tables WHERE data_source_format IN  ('DELTA','ICEBERG') LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'R-01-02' THEN 'Yes'\n--    WHEN waf_id = 'R-02-01' AND EXISTS (\n--      SELECT 1 FROM system.billing.usage WHERE usage_type LIKE '%SQL%' LIMIT 1\n--    ) THEN 'Yes'\n    WHEN waf_id IN ('R-01-03','R-02-04') AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE billing_origin_product = 'DLT' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'R-01-05' AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE billing_origin_product = 'MODEL_SERVING' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'R-01-06' AND EXISTS (\n      SELECT 1 FROM system.billing.usage WHERE sku_name LIKE '%SERVERLESS%' OR sku_name LIKE '%DLT%' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'R-02-03' AND EXISTS (\n      SELECT 1 FROM system.information_schema.metastores LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'R-03-01' AND EXISTS (\n        SELECT 1 FROM system.compute.clusters WHERE ifnull(max_autoscale_Workers,0) > 0 LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'R-03-02' AND EXISTS (\n        SELECT 1 FROM system.compute.warehouses where max_clusters - min_clusters > 0 LIMIT 1\n    ) THEN 'Yes'\n    ELSE 'No'\n  END AS implemented\n  FROM (\n    SELECT * FROM VALUES\n    ('R-01-01'),\n    ('R-01-02'),\n    ('R-01-03'),\n    --('R-01-04'),\n    ('R-01-05'),\n    ('R-01-06'),\n    ('R-02-03'),\n    ('R-02-04'),\n    ('R-03-01'),\n    ('R-03-02')\n    AS waf(waf_id)\n  )\n)\n\nSELECT\n  COUNT(*) AS total_controls,\n  SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) AS implemented_controls,\n  ROUND(100 * SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) / COUNT(*), 0) AS completion_percent\nFROM waf_status;\n"},{"name":"66110220","displayName":"waf_controls_s","query":"SELECT\n  waf_id,\n  principle,\n  best_practice,\n  CASE \n    WHEN waf_id = 'SCP-01-06' AND EXISTS (\n      SELECT 1 FROM system.access.audit WHERE action_name = 'mintOAuthToken' LIMIT 1\n    ) THEN 'Yes'\n    -- WHEN waf_id = 'SCP-01-08' AND EXISTS (\n    --   SELECT 1 FROM system.access.audit WHERE action_name = 'mintOAuthToken' LIMIT 1 -- update query\n    -- ) THEN 'Yes'\n    WHEN waf_id = 'SCP-01-11' AND EXISTS (\n      SELECT 1 FROM FROM system.access.audit WHERE action_name IN ('workspaceInHouseOAuthClientAuthentication', 'mintOAuthAuthorizationCode') LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'SCP-01-12' AND EXISTS (\n      SELECT 1 FROM system.compute.clusters WHERE data_security_mode = \"USER_ISOLATION\" LIMIT 1\n    ) THEN 'Yes'\n    -- WHEN waf_id = 'SCP-01-13' AND EXISTS (\n    --   SELECT 1 FROM system.lakeflow.jobs WHERE run_as LIKE 'zzz' LIMIT 1 -- not able to identify service principal from run_as column\n    -- ) THEN 'Yes'\n    WHEN waf_id = 'SCP-02-01' AND NOT EXISTS (\n      SELECT 1 FROM system.information_schema.tables WHERE storage_path LIKE 'dbfs:/%' OR storage_path LIKE '/dbfs/%' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id IN ('SCP-02-03', 'SCP-03-03') AND EXISTS (\n      SELECT 1 FROM system.access.outbound_network LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'SCP-06-01' AND EXISTS (\n        SELECT 1 FROM system.query.history where lower(statement_text) LIKE '%system.%' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'SCP-06-02' AND EXISTS (\n        SELECT 1 FROM system.query.history where lower(statement_text) LIKE '%system.access.audit%' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'SCP-06-03' AND EXISTS (\n        SELECT 1 FROM system.query.history where lower(statement_text) LIKE '%system.compute.clusters%' AND lower(statement_text) LIKE '%create_time%'  LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'SCP-06-05' AND EXISTS (\n        SELECT 1 FROM system.compute.clusters where cardinality(tags) > 0 LIMIT 1\n    ) THEN 'Yes'\n    ELSE 'No'\n  END AS implemented\nFROM (\n  SELECT * FROM VALUES\n    ('SCP-01-06', 'Manage identity and access using least privilege', 'Use token management'),\n    -- ('SCP-01-08', 'Manage identity and access using least privilege', 'Limit cluster creation rights'),\n    ('SCP-01-11', 'Manage identity and access using least privilege', 'Customer-approved workspace login'),\n    ('SCP-01-12', 'Manage identity and access using least privilege', 'Use clusters that support user isolation'),\n    -- ('SCP-01-13', 'Manage identity and access using least privilege', 'Use service principals to run production jobs'),\n    ('SCP-02-01', 'Protect data in transit and at rest', 'Avoid storing production data in DBFS'),\n    ('SCP-02-03', 'Protect data in transit and at rest', 'Use data exfiltration settings within the admin console'),\n    ('SCP-03-03', 'Secure your network and identify and protect endpoints', 'Implement network exfiltration protections'),\n    ('SCP-06-01','Monitor system security','Monitor workspace using System tables'),\n    ('SCP-06-02', 'Monitor system security', 'Use Databricks audit log'),\n    ('SCP-06-03', 'Monitor system security', 'Monitor provisioning activities'),\n    ('SCP-06-05', 'Monitor system security', 'Configure tagging to monitor usage and enable charge-back')\n) waf(waf_id, principle, best_practice);"},{"name":"650b5e73","displayName":"waf_principal_percentage_s","query":"WITH waf_status AS (\n  SELECT\n  waf_id,\n  principle,\n  best_practice,\n  CASE \n    WHEN waf_id = 'SCP-01-06' AND EXISTS (\n      SELECT 1 FROM system.access.audit WHERE action_name = 'mintOAuthToken' LIMIT 1\n    ) THEN 'Yes'\n    -- WHEN waf_id = 'SCP-01-08' AND EXISTS (\n    --   SELECT 1 FROM system.access.audit WHERE action_name = 'mintOAuthToken' LIMIT 1 -- update query\n    -- ) THEN 'Yes'\n    WHEN waf_id = 'SCP-01-11' AND EXISTS (\n      SELECT 1 FROM FROM system.access.audit WHERE action_name IN ('workspaceInHouseOAuthClientAuthentication', 'mintOAuthAuthorizationCode') LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'SCP-01-12' AND EXISTS (\n      SELECT 1 FROM system.compute.clusters WHERE data_security_mode = \"USER_ISOLATION\" LIMIT 1\n    ) THEN 'Yes'\n    -- WHEN waf_id = 'SCP-01-13' AND EXISTS (\n    --   SELECT 1 FROM system.lakeflow.jobs WHERE run_as LIKE 'zzz' LIMIT 1 -- not able to identify service principal from run_as column\n    -- ) THEN 'Yes'\n     WHEN waf_id = 'SCP-02-01' AND NOT EXISTS (\n      SELECT 1 FROM system.information_schema.tables WHERE storage_path LIKE 'dbfs:/%' OR storage_path LIKE '/dbfs/%' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id IN ('SCP-02-03', 'SCP-03-03') AND EXISTS (\n      SELECT 1 FROM system.access.outbound_network LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'SCP-06-01' AND EXISTS (\n        SELECT 1 FROM system.query.history where lower(statement_text) LIKE '%system.%' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'SCP-06-02' AND EXISTS (\n        SELECT 1 FROM system.query.history where lower(statement_text) LIKE '%system.access.audit%' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'SCP-06-03' AND EXISTS (\n        SELECT 1 FROM system.query.history where lower(statement_text) LIKE '%system.compute.clusters%' AND lower(statement_text) LIKE '%create_time%'  LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'SCP-06-05' AND EXISTS (\n        SELECT 1 FROM system.compute.clusters where cardinality(tags) > 0 LIMIT 1\n    ) THEN 'Yes'\n    ELSE 'No'\n  END AS implemented\n  FROM (\n    SELECT * FROM VALUES\n      ('SCP-01-06', 'Manage identity and access using least privilege', 'Use token management'),\n      -- ('SCP-01-08', 'Manage identity and access using least privilege', 'Limit cluster creation rights'),\n      ('SCP-01-11', 'Manage identity and access using least privilege', 'Customer-approved workspace login'),\n      ('SCP-01-12', 'Manage identity and access using least privilege', 'Use clusters that support user isolation'),\n      -- ('SCP-01-13', 'Manage identity and access using least privilege', 'Use service principals to run production jobs'),\n      ('SCP-02-01', 'Protect data in transit and at rest', 'Avoid storing production data in DBFS'),\n      ('SCP-02-03', 'Protect data in transit and at rest', 'Use data exfiltration settings within the admin console'),\n      ('SCP-03-03', 'Secure your network and identify and protect endpoints', 'Implement network exfiltration protections'),\n      ('SCP-06-01','Monitor system security','Monitor workspace using System tables'),\n      ('SCP-06-02', 'Monitor system security', 'Use Databricks audit log'),\n      ('SCP-06-03', 'Monitor system security', 'Monitor provisioning activities'),\n      ('SCP-06-05', 'Monitor system security', 'Configure tagging to monitor usage and enable charge-back')\n  ) waf(waf_id, principle, best_practice)\n)\n\nSELECT\n  principle,\n  COUNT(*) AS total_controls,\n  SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) AS implemented_controls,\n  ROUND(100 * SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) / COUNT(*), 0) AS completion_percent\nFROM waf_status\nGROUP BY principle\nORDER BY principle;\n"},{"name":"4a13154c","displayName":"total_percentage_s","query":"WITH waf_status AS (\n  SELECT\n    waf_id,\n    CASE \n    WHEN waf_id = 'SCP-01-06' AND EXISTS (\n      SELECT 1 FROM system.access.audit WHERE action_name = 'mintOAuthToken' LIMIT 1\n    ) THEN 'Yes'\n    -- WHEN waf_id = 'SCP-01-08' AND EXISTS (\n    --   SELECT 1 FROM system.access.audit WHERE action_name = 'mintOAuthToken' LIMIT 1 -- update query\n    -- ) THEN 'Yes'\n    WHEN waf_id = 'SCP-01-11' AND EXISTS (\n      SELECT 1 FROM FROM system.access.audit WHERE action_name IN ('workspaceInHouseOAuthClientAuthentication', 'mintOAuthAuthorizationCode') LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'SCP-01-12' AND EXISTS (\n      SELECT 1 FROM system.compute.clusters WHERE data_security_mode = \"USER_ISOLATION\" LIMIT 1\n    ) THEN 'Yes'\n    -- WHEN waf_id = 'SCP-01-13' AND EXISTS (\n    --   SELECT 1 FROM system.lakeflow.jobs WHERE run_as LIKE 'zzz' LIMIT 1 -- not able to identify service principal from run_as column\n    -- ) THEN 'Yes'\n     WHEN waf_id = 'SCP-02-01' AND NOT EXISTS (\n      SELECT 1 FROM system.information_schema.tables WHERE storage_path LIKE 'dbfs:/%' OR storage_path LIKE '/dbfs/%' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id IN ('SCP-02-03', 'SCP-03-03') AND EXISTS (\n      SELECT 1 FROM system.access.outbound_network LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'SCP-06-01' AND EXISTS (\n        SELECT 1 FROM system.query.history where lower(statement_text) LIKE '%system.%' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'SCP-06-02' AND EXISTS (\n        SELECT 1 FROM system.query.history where lower(statement_text) LIKE '%system.access.audit%' LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'SCP-06-03' AND EXISTS (\n        SELECT 1 FROM system.query.history where lower(statement_text) LIKE '%system.compute.clusters%' AND lower(statement_text) LIKE '%create_time%'  LIMIT 1\n    ) THEN 'Yes'\n    WHEN waf_id = 'SCP-06-05' AND EXISTS (\n        SELECT 1 FROM system.compute.clusters where cardinality(tags) > 0 LIMIT 1\n    ) THEN 'Yes'\n    ELSE 'No'\n  END AS implemented\n  FROM (\n    SELECT * FROM VALUES\n    ('SCP-01-06'), \n      -- ('SCP-01-08')\n      ('SCP-01-11'),\n      ('SCP-01-12'),\n      -- ('SCP-01-13'),\n      ('SCP-02-01'),\n      ('SCP-02-03'),\n      ('SCP-03-03'),\n      ('SCP-06-01'),\n      ('SCP-06-02'),\n      ('SCP-06-03'),\n      ('SCP-06-05')\n    AS waf(waf_id)\n  )\n)\n\nSELECT\n  COUNT(*) AS total_controls,\n  SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) AS implemented_controls,\n  ROUND(100 * SUM(CASE WHEN implemented = 'Yes' THEN 1 ELSE 0 END) / COUNT(*), 0) AS completion_percent\nFROM waf_status;\n"}],"pages":[{"name":"3f38204d","displayName":"Summary","layout":[{"widget":{"name":"2ca8f2ea","queries":[{"name":"main_query","query":{"datasetName":"b39d7f91","fields":[{"name":"sum(completion_percent)","expression":"SUM(`completion_percent`)"},{"name":"pillar","expression":"`pillar`"}],"disaggregated":false}}],"spec":{"version":3,"widgetType":"bar","encodings":{"x":{"fieldName":"sum(completion_percent)","scale":{"type":"quantitative"},"displayName":"Sum of completion_percent"},"y":{"fieldName":"pillar","scale":{"type":"categorical","sort":{"by":"x-reversed"}},"displayName":"pillar"}},"frame":{"title":"Completion percentage across pillars","showTitle":true}}},"position":{"x":0,"y":0,"width":6,"height":6}},{"widget":{"name":"5c1053c3","textbox_spec":"WAF Coverage\n"},"position":{"x":0,"y":0,"width":6,"height":2}}],"pageType":"PAGE_TYPE_CANVAS"},{"name":"e9e15078","displayName":"Data And AI Governance","layout":[{"widget":{"name":"ec3a56bc","textbox_spec":"# Data And AI Governance"},"position":{"x":0,"y":0,"width":6,"height":2}},{"widget":{"name":"d682affb","queries":[{"name":"main_query","query":{"datasetName":"303a6758","fields":[{"name":"count(1)","expression":"`count(1)`"}],"disaggregated":true}}],"spec":{"version":2,"widgetType":"counter","encodings":{"value":{"fieldName":"count(1)","style":{"rules":[{"condition":{"operator":"=","operand":{"type":"data-value","value":"0"}},"color":"#888888"}]},"displayName":"count(1)"}},"frame":{"showTitle":true,"showDescription":false,"title":"Total Tables"}}},"position":{"x":0,"y":21,"width":2,"height":3}},{"widget":{"name":"f0321af0","queries":[{"name":"main_query","query":{"datasetName":"f5bf425c","fields":[{"name":"count(1)","expression":"`count(1)`"}],"disaggregated":true}}],"spec":{"version":2,"widgetType":"counter","encodings":{"value":{"fieldName":"count(1)","style":{"rules":[{"condition":{"operator":"=","operand":{"type":"data-value","value":"0"}},"color":"#888888"}]},"displayName":"count(1)"}},"frame":{"showTitle":true,"title":"Total Volumes","contentAlignment":"center"}}},"position":{"x":2,"y":21,"width":2,"height":3}},{"widget":{"name":"ee5b3bb1","queries":[{"name":"main_query","query":{"datasetName":"5fdcd556","fields":[{"name":"count(1)","expression":"`count(1)`"}],"disaggregated":true}}],"spec":{"version":2,"widgetType":"counter","encodings":{"value":{"fieldName":"count(1)","style":{"rules":[{"condition":{"operator":"=","operand":{"type":"data-value","value":"0"}},"color":"#888888"}]},"displayName":"count(1)"}},"frame":{"showTitle":true,"title":"Total Functions"}}},"position":{"x":4,"y":21,"width":2,"height":3}},{"widget":{"name":"33abd742","queries":[{"name":"main_query","query":{"datasetName":"a92ace17","fields":[{"name":"full_name_count","expression":"`full_name_count`"}],"disaggregated":true}}],"spec":{"version":2,"widgetType":"counter","encodings":{"value":{"fieldName":"full_name_count","displayName":"full_name_count"}},"frame":{"showTitle":true,"showDescription":true,"description":"See the count of tables with no reads","title":"Unused Tables (Last 30 Days)"}}},"position":{"x":0,"y":31,"width":2,"height":3}},{"widget":{"name":"bb0b2fd5","queries":[{"name":"main_query","query":{"datasetName":"55e66413","fields":[{"name":"distinct_tables","expression":"`distinct_tables`"}],"disaggregated":true}}],"spec":{"version":2,"widgetType":"counter","encodings":{"value":{"fieldName":"distinct_tables","style":{"rules":[{"condition":{"operator":"=","operand":{"type":"data-value","value":"0"}},"color":"#888888"}]},"displayName":"distinct_tables"}},"frame":{"showTitle":true,"title":"Active Tables (Last 30 days)","showDescription":true,"description":"See the count of tables with reads"}}},"position":{"x":2,"y":31,"width":2,"height":3}},{"widget":{"name":"7414554c","queries":[{"name":"main_query","query":{"datasetName":"90d7e6f1","fields":[{"name":"distinct_users","expression":"`distinct_users`"}],"disaggregated":true}}],"spec":{"version":2,"widgetType":"counter","encodings":{"value":{"fieldName":"distinct_users","style":{"rules":[{"condition":{"operator":"=","operand":{"type":"data-value","value":"0"}},"color":"#000000"}]},"displayName":"distinct_users"}},"frame":{"showTitle":true,"title":"Active Users (Last 30 Days)","showDescription":true,"description":"See the count of users who read from tables"}}},"position":{"x":4,"y":31,"width":2,"height":3}},{"widget":{"name":"bdaa8aa0","queries":[{"name":"main_query","query":{"datasetName":"628c2773","fields":[{"name":"full_name_count","expression":"`full_name_count`"}],"disaggregated":true}}],"spec":{"version":2,"widgetType":"counter","encodings":{"value":{"fieldName":"full_name_count","displayName":"full_name_count"}},"frame":{"showTitle":true,"title":"Ungoverned Tables","showDescription":true,"description":"See the count of tables to which all users have read access"}}},"position":{"x":0,"y":41,"width":3,"height":3}},{"widget":{"name":"e60dfd50","queries":[{"name":"main_query","query":{"datasetName":"1f951287","fields":[{"name":"distinct_table_count","expression":"`distinct_table_count`"}],"disaggregated":true}}],"spec":{"version":2,"widgetType":"counter","encodings":{"value":{"fieldName":"distinct_table_count","displayName":"distinct_table_count"}},"frame":{"showTitle":true,"title":"Sensitive Tables","showDescription":true,"description":"See the count of tables with either row filters or column masks"}}},"position":{"x":3,"y":41,"width":3,"height":3}},{"widget":{"name":"75d01e2b","queries":[{"name":"main_query","query":{"datasetName":"913b3827","fields":[{"name":"sum(count)","expression":"SUM(`count`)"},{"name":"label","expression":"`label`"}],"disaggregated":false}}],"spec":{"version":3,"widgetType":"pie","encodings":{"angle":{"fieldName":"sum(count)","scale":{"type":"quantitative"},"displayName":" "},"color":{"fieldName":"label","scale":{"type":"categorical","mappings":[{"value":"Untagged","color":"#919191"},{"value":"Tagged","color":"#00A972"}]},"displayName":"Legend"},"label":{"show":true}},"frame":{"showTitle":true,"title":"Table Tag Usage","showDescription":false,"description":"See the breakdown of tagged and untagged tables"}}},"position":{"x":0,"y":44,"width":2,"height":6}},{"widget":{"name":"ff45bac8","queries":[{"name":"main_query","query":{"datasetName":"788914b8","fields":[{"name":"sum(usage_count)","expression":"SUM(`usage_count`)"},{"name":"tag_name","expression":"`tag_name`"}],"disaggregated":false}}],"spec":{"version":3,"widgetType":"bar","encodings":{"x":{"fieldName":"sum(usage_count)","scale":{"type":"quantitative"},"displayName":"Usage Count"},"y":{"fieldName":"tag_name","scale":{"type":"categorical","sort":{"by":"x-reversed"}},"displayName":"Tag Name"},"label":{"show":false}},"frame":{"showTitle":true,"title":"Most Popular Table Tags","showDescription":false,"description":""},"mark":{"colors":["#AB4057","#FFAB00","#00A972","#FF3621","#8BCAE7","#AB4057","#99DDB4","#FCA4A1","#919191","#BF7080"]}}},"position":{"x":2,"y":44,"width":4,"height":6}},{"widget":{"name":"4a969668","queries":[{"name":"main_query","query":{"datasetName":"763a2da9","fields":[{"name":"sum(read_count)","expression":"SUM(`read_count`)"},{"name":"table_full_name","expression":"`table_full_name`"}],"disaggregated":false}}],"spec":{"version":3,"widgetType":"bar","encodings":{"x":{"fieldName":"sum(read_count)","scale":{"type":"quantitative"},"displayName":"Usage Count"},"y":{"fieldName":"table_full_name","scale":{"type":"categorical","sort":{"by":"x-reversed"}},"displayName":"Table Name"},"label":{"show":false}},"frame":{"showTitle":true,"title":"Most Popular Tables","showDescription":true,"description":"Identify the 10 most read from tables and see when they were last written to"}}},"position":{"x":0,"y":34,"width":6,"height":7}},{"widget":{"name":"f9046177","queries":[{"name":"main_query","query":{"datasetName":"8d97349c","fields":[{"name":"monthly(usage_date)","expression":"DATE_TRUNC(\"MONTH\", `usage_date`)"},{"name":"sum(usage_count)","expression":"SUM(`usage_count`)"}],"disaggregated":false}}],"spec":{"version":3,"widgetType":"line","encodings":{"x":{"fieldName":"monthly(usage_date)","scale":{"type":"temporal"},"displayName":"Period"},"y":{"fieldName":"sum(usage_count)","scale":{"type":"quantitative"},"displayName":"Read Events"}},"frame":{"showTitle":true,"showDescription":true,"title":"Table Usage (Last 12 Months)","description":"See read events for tables over time"}}},"position":{"x":0,"y":24,"width":6,"height":7}},{"widget":{"name":"b78ba2ba","queries":[{"name":"main_query","query":{"datasetName":"1eab9fe1","fields":[{"name":"waf_id","expression":"`waf_id`"},{"name":"implemented","expression":"`implemented`"},{"name":"pillar","expression":"`pillar`"},{"name":"principle","expression":"`principle`"},{"name":"description","expression":"`description`"},{"name":"check_type","expression":"`check_type`"},{"name":"source_object","expression":"`source_object`"}],"disaggregated":true}}],"spec":{"version":1,"widgetType":"table","encodings":{"columns":[{"fieldName":"waf_id","title":"waf_id","booleanValues":["false","true"],"type":"string","displayAs":"string","displayName":"waf_id"},{"fieldName":"implemented","title":"implemented","booleanValues":["false","true"],"type":"string","displayAs":"string","displayName":"implemented"},{"fieldName":"pillar","title":"pillar","booleanValues":["false","true"],"type":"string","displayAs":"string","displayName":"pillar"},{"fieldName":"principle","title":"principle","booleanValues":["false","true"],"type":"string","displayAs":"string","displayName":"principle"},{"fieldName":"description","title":"description","booleanValues":["false","true"],"type":"string","displayAs":"string","displayName":"description"},{"fieldName":"check_type","title":"check_type","booleanValues":["false","true"],"type":"string","displayAs":"string","displayName":"check_type"},{"fieldName":"source_object","title":"source_object","booleanValues":["false","true"],"type":"string","displayAs":"string","displayName":"source_object"}]},"invisibleColumns":[],"allowHTMLByDefault":false,"itemsPerPage":25,"paginationSize":"default","condensed":true,"withRowNumber":false,"frame":{"title":"WAF Controls Table","showTitle":true}}},"position":{"x":0,"y":10,"width":6,"height":6}},{"widget":{"name":"ca7cc5ad","queries":[{"name":"main_query","query":{"datasetName":"95258030","fields":[{"name":"sum(completion_percent)","expression":"SUM(`completion_percent`)"},{"name":"principle","expression":"`principle`"}],"disaggregated":false}}],"spec":{"version":3,"widgetType":"bar","encodings":{"x":{"fieldName":"sum(completion_percent)","scale":{"type":"quantitative"},"displayName":"Sum of completion_percent"},"y":{"fieldName":"principle","scale":{"type":"categorical","sort":{"by":"x-reversed"}},"displayName":"principle"}},"frame":{"title":"Completion percentage of implemented controls per principle","showTitle":true}}},"position":{"x":0,"y":4,"width":6,"height":6}},{"widget":{"name":"4b2ce052","queries":[{"name":"main_query","query":{"datasetName":"920a8759","fields":[{"name":"avg(completion_percent)","expression":"AVG(`completion_percent`)"}],"disaggregated":false}}],"spec":{"version":2,"widgetType":"counter","encodings":{"value":{"fieldName":"avg(completion_percent)","displayName":"Average completion_percent"}},"frame":{"title":"Completion Percentage","showTitle":true}}},"position":{"x":0,"y":2,"width":6,"height":2}}],"pageType":"PAGE_TYPE_CANVAS"},{"name":"d88f271c","displayName":"Interoperability & Usability","layout":[{"widget":{"name":"96149840","textbox_spec":"# Interoperability & Usability"},"position":{"x":0,"y":0,"width":6,"height":2}},{"widget":{"name":"036dc3f7","queries":[{"name":"main_query","query":{"datasetName":"c19487ca","fields":[{"name":"waf_id","expression":"`waf_id`"},{"name":"principle","expression":"`principle`"},{"name":"practice","expression":"`practice`"},{"name":"source_object","expression":"`source_object`"},{"name":"implemented","expression":"`implemented`"}],"disaggregated":true}}],"spec":{"version":1,"widgetType":"table","encodings":{"columns":[{"fieldName":"waf_id","booleanValues":["false","true"],"imageUrlTemplate":"{{ @ }}","imageTitleTemplate":"{{ @ }}","imageWidth":"","imageHeight":"","linkUrlTemplate":"{{ @ }}","linkTextTemplate":"{{ @ }}","linkTitleTemplate":"{{ @ }}","linkOpenInNewTab":true,"type":"string","displayAs":"string","visible":true,"order":100000,"title":"waf_id","allowSearch":false,"alignContent":"left","allowHTML":false,"highlightLinks":false,"useMonospaceFont":false,"preserveWhitespace":false,"displayName":"waf_id"},{"fieldName":"principle","booleanValues":["false","true"],"imageUrlTemplate":"{{ @ }}","imageTitleTemplate":"{{ @ }}","imageWidth":"","imageHeight":"","linkUrlTemplate":"{{ @ }}","linkTextTemplate":"{{ @ }}","linkTitleTemplate":"{{ @ }}","linkOpenInNewTab":true,"type":"string","displayAs":"string","visible":true,"order":100001,"title":"principle","allowSearch":false,"alignContent":"left","allowHTML":false,"highlightLinks":false,"useMonospaceFont":false,"preserveWhitespace":false,"displayName":"principle"},{"fieldName":"practice","booleanValues":["false","true"],"imageUrlTemplate":"{{ @ }}","imageTitleTemplate":"{{ @ }}","imageWidth":"","imageHeight":"","linkUrlTemplate":"{{ @ }}","linkTextTemplate":"{{ @ }}","linkTitleTemplate":"{{ @ }}","linkOpenInNewTab":true,"type":"string","displayAs":"string","visible":true,"order":100002,"title":"practice","allowSearch":false,"alignContent":"left","allowHTML":false,"highlightLinks":false,"useMonospaceFont":false,"preserveWhitespace":false,"displayName":"practice"},{"fieldName":"source_object","booleanValues":["false","true"],"imageUrlTemplate":"{{ @ }}","imageTitleTemplate":"{{ @ }}","imageWidth":"","imageHeight":"","linkUrlTemplate":"{{ @ }}","linkTextTemplate":"{{ @ }}","linkTitleTemplate":"{{ @ }}","linkOpenInNewTab":true,"type":"string","displayAs":"string","visible":true,"order":100003,"title":"source_object","allowSearch":false,"alignContent":"left","allowHTML":false,"highlightLinks":false,"useMonospaceFont":false,"preserveWhitespace":false,"displayName":"source_object"},{"fieldName":"implemented","booleanValues":["false","true"],"imageUrlTemplate":"{{ @ }}","imageTitleTemplate":"{{ @ }}","imageWidth":"","imageHeight":"","linkUrlTemplate":"{{ @ }}","linkTextTemplate":"{{ @ }}","linkTitleTemplate":"{{ @ }}","linkOpenInNewTab":true,"type":"string","displayAs":"string","visible":true,"order":100004,"title":"implemented","allowSearch":false,"alignContent":"left","allowHTML":false,"highlightLinks":false,"useMonospaceFont":false,"preserveWhitespace":false,"displayName":"implemented"}]},"invisibleColumns":[],"allowHTMLByDefault":false,"itemsPerPage":25,"paginationSize":"default","condensed":true,"withRowNumber":false,"frame":{"title":"WAF Controls Table","showTitle":true}}},"position":{"x":0,"y":10,"width":6,"height":8}},{"widget":{"name":"8953ae16","queries":[{"name":"main_query","query":{"datasetName":"83c64453","fields":[{"name":"sum(completion_percent)","expression":"SUM(`completion_percent`)"},{"name":"principle","expression":"`principle`"}],"disaggregated":false}}],"spec":{"version":3,"widgetType":"bar","encodings":{"x":{"fieldName":"sum(completion_percent)","scale":{"type":"quantitative"},"displayName":"Sum of completion_percent"},"y":{"fieldName":"principle","scale":{"type":"categorical","sort":{"by":"x-reversed"}},"displayName":"principle"}},"frame":{"title":"Completion percentage of implemented controls per principle","showTitle":true}}},"position":{"x":0,"y":4,"width":6,"height":6}},{"widget":{"name":"e831cd84","queries":[{"name":"main_query","query":{"datasetName":"05c16819","fields":[{"name":"avg(completion_percent)","expression":"AVG(`completion_percent`)"}],"disaggregated":false}}],"spec":{"version":2,"widgetType":"counter","encodings":{"value":{"fieldName":"avg(completion_percent)","displayName":"Average completion_percent"}},"frame":{"title":"Completion Percentage","showTitle":true}}},"position":{"x":0,"y":2,"width":6,"height":2}}],"pageType":"PAGE_TYPE_CANVAS"},{"name":"e290aac3","displayName":"Cost Optimisation","layout":[{"widget":{"name":"96877a12","textbox_spec":"# Cost Optimisation"},"position":{"x":0,"y":0,"width":6,"height":2}},{"widget":{"name":"42a0abd4","queries":[{"name":"main_query","query":{"datasetName":"dbdc9433","fields":[{"name":"waf_id","expression":"`waf_id`"},{"name":"principle","expression":"`principle`"},{"name":"best_practice","expression":"`best_practice`"},{"name":"implemented","expression":"`implemented`"}],"disaggregated":true}}],"spec":{"version":1,"widgetType":"table","encodings":{"columns":[{"fieldName":"waf_id","booleanValues":["false","true"],"imageUrlTemplate":"{{ @ }}","imageTitleTemplate":"{{ @ }}","imageWidth":"","imageHeight":"","linkUrlTemplate":"{{ @ }}","linkTextTemplate":"{{ @ }}","linkTitleTemplate":"{{ @ }}","linkOpenInNewTab":true,"type":"string","displayAs":"string","visible":true,"order":100000,"title":"waf_id","allowSearch":false,"alignContent":"left","allowHTML":false,"highlightLinks":false,"useMonospaceFont":false,"preserveWhitespace":false,"displayName":"waf_id"},{"fieldName":"principle","booleanValues":["false","true"],"imageUrlTemplate":"{{ @ }}","imageTitleTemplate":"{{ @ }}","imageWidth":"","imageHeight":"","linkUrlTemplate":"{{ @ }}","linkTextTemplate":"{{ @ }}","linkTitleTemplate":"{{ @ }}","linkOpenInNewTab":true,"type":"string","displayAs":"string","visible":true,"order":100001,"title":"principle","allowSearch":false,"alignContent":"left","allowHTML":false,"highlightLinks":false,"useMonospaceFont":false,"preserveWhitespace":false,"displayName":"principle"},{"fieldName":"best_practice","booleanValues":["false","true"],"imageUrlTemplate":"{{ @ }}","imageTitleTemplate":"{{ @ }}","imageWidth":"","imageHeight":"","linkUrlTemplate":"{{ @ }}","linkTextTemplate":"{{ @ }}","linkTitleTemplate":"{{ @ }}","linkOpenInNewTab":true,"type":"string","displayAs":"string","visible":true,"order":100002,"title":"best_practice","allowSearch":false,"alignContent":"left","allowHTML":false,"highlightLinks":false,"useMonospaceFont":false,"preserveWhitespace":false,"displayName":"best_practice"},{"fieldName":"implemented","booleanValues":["false","true"],"imageUrlTemplate":"{{ @ }}","imageTitleTemplate":"{{ @ }}","imageWidth":"","imageHeight":"","linkUrlTemplate":"{{ @ }}","linkTextTemplate":"{{ @ }}","linkTitleTemplate":"{{ @ }}","linkOpenInNewTab":true,"type":"string","displayAs":"string","visible":true,"order":100003,"title":"implemented","allowSearch":false,"alignContent":"left","allowHTML":false,"highlightLinks":false,"useMonospaceFont":false,"preserveWhitespace":false,"displayName":"implemented"}]},"invisibleColumns":[],"allowHTMLByDefault":false,"itemsPerPage":25,"paginationSize":"default","condensed":true,"withRowNumber":false,"frame":{"title":"WAF Controls Table","showTitle":true}}},"position":{"x":0,"y":10,"width":6,"height":8}},{"widget":{"name":"35c49ee2","queries":[{"name":"main_query","query":{"datasetName":"81f0a6aa","fields":[{"name":"sum(completion_percent)","expression":"SUM(`completion_percent`)"},{"name":"principle","expression":"`principle`"}],"disaggregated":false}}],"spec":{"version":3,"widgetType":"bar","encodings":{"x":{"fieldName":"sum(completion_percent)","scale":{"type":"quantitative"},"displayName":"Sum of completion_percent"},"y":{"fieldName":"principle","scale":{"type":"categorical","sort":{"by":"x-reversed"}},"displayName":"principle"}},"frame":{"title":"Completion percentage of implemented controls per principle","showTitle":true}}},"position":{"x":0,"y":4,"width":6,"height":6}},{"widget":{"name":"04def979","queries":[{"name":"main_query","query":{"datasetName":"06f2987c","fields":[{"name":"avg(completion_percent)","expression":"AVG(`completion_percent`)"}],"disaggregated":false}}],"spec":{"version":2,"widgetType":"counter","encodings":{"value":{"fieldName":"avg(completion_percent)","displayName":"Average completion_percent"}},"frame":{"title":"Completion Percentage","showTitle":true}}},"position":{"x":0,"y":2,"width":6,"height":2}}],"pageType":"PAGE_TYPE_CANVAS"},{"name":"4d045fd5","displayName":"Performance Efficiency","layout":[{"widget":{"name":"3090a1a6","textbox_spec":"# Performance Efficiency"},"position":{"x":0,"y":0,"width":6,"height":2}},{"widget":{"name":"dfe014e3","queries":[{"name":"main_query","query":{"datasetName":"4745a0f9","fields":[{"name":"waf_id","expression":"`waf_id`"},{"name":"principle","expression":"`principle`"},{"name":"best_practice","expression":"`best_practice`"},{"name":"implemented","expression":"`implemented`"}],"disaggregated":true}}],"spec":{"version":1,"widgetType":"table","encodings":{"columns":[{"fieldName":"waf_id","booleanValues":["false","true"],"imageUrlTemplate":"{{ @ }}","imageTitleTemplate":"{{ @ }}","imageWidth":"","imageHeight":"","linkUrlTemplate":"{{ @ }}","linkTextTemplate":"{{ @ }}","linkTitleTemplate":"{{ @ }}","linkOpenInNewTab":true,"type":"string","displayAs":"string","visible":true,"order":100000,"title":"waf_id","allowSearch":false,"alignContent":"left","allowHTML":false,"highlightLinks":false,"useMonospaceFont":false,"preserveWhitespace":false,"displayName":"waf_id"},{"fieldName":"principle","booleanValues":["false","true"],"imageUrlTemplate":"{{ @ }}","imageTitleTemplate":"{{ @ }}","imageWidth":"","imageHeight":"","linkUrlTemplate":"{{ @ }}","linkTextTemplate":"{{ @ }}","linkTitleTemplate":"{{ @ }}","linkOpenInNewTab":true,"type":"string","displayAs":"string","visible":true,"order":100001,"title":"principle","allowSearch":false,"alignContent":"left","allowHTML":false,"highlightLinks":false,"useMonospaceFont":false,"preserveWhitespace":false,"displayName":"principle"},{"fieldName":"best_practice","booleanValues":["false","true"],"imageUrlTemplate":"{{ @ }}","imageTitleTemplate":"{{ @ }}","imageWidth":"","imageHeight":"","linkUrlTemplate":"{{ @ }}","linkTextTemplate":"{{ @ }}","linkTitleTemplate":"{{ @ }}","linkOpenInNewTab":true,"type":"string","displayAs":"string","visible":true,"order":100002,"title":"best_practice","allowSearch":false,"alignContent":"left","allowHTML":false,"highlightLinks":false,"useMonospaceFont":false,"preserveWhitespace":false,"displayName":"best_practice"},{"fieldName":"implemented","booleanValues":["false","true"],"imageUrlTemplate":"{{ @ }}","imageTitleTemplate":"{{ @ }}","imageWidth":"","imageHeight":"","linkUrlTemplate":"{{ @ }}","linkTextTemplate":"{{ @ }}","linkTitleTemplate":"{{ @ }}","linkOpenInNewTab":true,"type":"string","displayAs":"string","visible":true,"order":100003,"title":"implemented","allowSearch":false,"alignContent":"left","allowHTML":false,"highlightLinks":false,"useMonospaceFont":false,"preserveWhitespace":false,"displayName":"implemented"}]},"invisibleColumns":[],"allowHTMLByDefault":false,"itemsPerPage":25,"paginationSize":"default","condensed":true,"withRowNumber":false,"frame":{"title":"WAF Controls Table","showTitle":true}}},"position":{"x":0,"y":10,"width":6,"height":8}},{"widget":{"name":"f60f67db","queries":[{"name":"main_query","query":{"datasetName":"13e29e6c","fields":[{"name":"sum(completion_percent)","expression":"SUM(`completion_percent`)"},{"name":"principle","expression":"`principle`"}],"disaggregated":false}}],"spec":{"version":3,"widgetType":"bar","encodings":{"x":{"fieldName":"sum(completion_percent)","scale":{"type":"quantitative"},"displayName":"Sum of completion_percent"},"y":{"fieldName":"principle","scale":{"type":"categorical","sort":{"by":"x-reversed"}},"displayName":"principle"}},"frame":{"title":"Completion percentage of implemented controls per principle","showTitle":true}}},"position":{"x":0,"y":4,"width":6,"height":6}},{"widget":{"name":"f77e0b79","queries":[{"name":"main_query","query":{"datasetName":"87deca0d","fields":[{"name":"avg(completion_percent)","expression":"AVG(`completion_percent`)"}],"disaggregated":false}}],"spec":{"version":2,"widgetType":"counter","encodings":{"value":{"fieldName":"avg(completion_percent)","displayName":"Average completion_percent"}},"frame":{"title":"Completion Percentage","showTitle":true}}},"position":{"x":0,"y":2,"width":6,"height":2}}],"pageType":"PAGE_TYPE_CANVAS"},{"name":"3169ca1b","displayName":"Reliability","layout":[{"widget":{"name":"2d1e0990","textbox_spec":"# Reliability"},"position":{"x":0,"y":0,"width":6,"height":2}},{"widget":{"name":"2b4e0406","queries":[{"name":"main_query","query":{"datasetName":"e64dd2aa","fields":[{"name":"waf_id","expression":"`waf_id`"},{"name":"principle","expression":"`principle`"},{"name":"best_practice","expression":"`best_practice`"},{"name":"implemented","expression":"`implemented`"}],"disaggregated":true}}],"spec":{"version":1,"widgetType":"table","encodings":{"columns":[{"fieldName":"waf_id","booleanValues":["false","true"],"imageUrlTemplate":"{{ @ }}","imageTitleTemplate":"{{ @ }}","imageWidth":"","imageHeight":"","linkUrlTemplate":"{{ @ }}","linkTextTemplate":"{{ @ }}","linkTitleTemplate":"{{ @ }}","linkOpenInNewTab":true,"type":"string","displayAs":"string","visible":true,"order":100000,"title":"waf_id","allowSearch":false,"alignContent":"left","allowHTML":false,"highlightLinks":false,"useMonospaceFont":false,"preserveWhitespace":false,"displayName":"waf_id"},{"fieldName":"principle","booleanValues":["false","true"],"imageUrlTemplate":"{{ @ }}","imageTitleTemplate":"{{ @ }}","imageWidth":"","imageHeight":"","linkUrlTemplate":"{{ @ }}","linkTextTemplate":"{{ @ }}","linkTitleTemplate":"{{ @ }}","linkOpenInNewTab":true,"type":"string","displayAs":"string","visible":true,"order":100001,"title":"principle","allowSearch":false,"alignContent":"left","allowHTML":false,"highlightLinks":false,"useMonospaceFont":false,"preserveWhitespace":false,"displayName":"principle"},{"fieldName":"best_practice","booleanValues":["false","true"],"imageUrlTemplate":"{{ @ }}","imageTitleTemplate":"{{ @ }}","imageWidth":"","imageHeight":"","linkUrlTemplate":"{{ @ }}","linkTextTemplate":"{{ @ }}","linkTitleTemplate":"{{ @ }}","linkOpenInNewTab":true,"type":"string","displayAs":"string","visible":true,"order":100002,"title":"best_practice","allowSearch":false,"alignContent":"left","allowHTML":false,"highlightLinks":false,"useMonospaceFont":false,"preserveWhitespace":false,"displayName":"best_practice"},{"fieldName":"implemented","booleanValues":["false","true"],"imageUrlTemplate":"{{ @ }}","imageTitleTemplate":"{{ @ }}","imageWidth":"","imageHeight":"","linkUrlTemplate":"{{ @ }}","linkTextTemplate":"{{ @ }}","linkTitleTemplate":"{{ @ }}","linkOpenInNewTab":true,"type":"string","displayAs":"string","visible":true,"order":100003,"title":"implemented","allowSearch":false,"alignContent":"left","allowHTML":false,"highlightLinks":false,"useMonospaceFont":false,"preserveWhitespace":false,"displayName":"implemented"}]},"invisibleColumns":[],"allowHTMLByDefault":false,"itemsPerPage":25,"paginationSize":"default","condensed":true,"withRowNumber":false,"frame":{"title":"WAF Controls Table","showTitle":true}}},"position":{"x":0,"y":10,"width":6,"height":8}},{"widget":{"name":"8fb3a863","queries":[{"name":"main_query","query":{"datasetName":"c027e1dd","fields":[{"name":"sum(completion_percent)","expression":"SUM(`completion_percent`)"},{"name":"principle","expression":"`principle`"}],"disaggregated":false}}],"spec":{"version":3,"widgetType":"bar","encodings":{"x":{"fieldName":"sum(completion_percent)","scale":{"type":"quantitative"},"displayName":"Sum of completion_percent"},"y":{"fieldName":"principle","scale":{"type":"categorical","sort":{"by":"x-reversed"}},"displayName":"principle"}},"frame":{"title":"Completion percentage of implemented controls per principle","showTitle":true}}},"position":{"x":0,"y":4,"width":6,"height":6}},{"widget":{"name":"deebb893","queries":[{"name":"main_query","query":{"datasetName":"479706d3","fields":[{"name":"avg(completion_percent)","expression":"AVG(`completion_percent`)"}],"disaggregated":false}}],"spec":{"version":2,"widgetType":"counter","encodings":{"value":{"fieldName":"avg(completion_percent)","displayName":"Average completion_percent"}},"frame":{"title":"Completion Percentage","showTitle":true}}},"position":{"x":0,"y":2,"width":6,"height":2}}],"pageType":"PAGE_TYPE_CANVAS"},{"name":"b270bf08","displayName":"Security, Compliance and Privacy","layout":[{"widget":{"name":"da71b598","textbox_spec":"# Security, Compliance and Privacy"},"position":{"x":0,"y":0,"width":6,"height":2}},{"widget":{"name":"882611d1","queries":[{"name":"main_query","query":{"datasetName":"66110220","fields":[{"name":"waf_id","expression":"`waf_id`"},{"name":"principle","expression":"`principle`"},{"name":"best_practice","expression":"`best_practice`"},{"name":"implemented","expression":"`implemented`"}],"disaggregated":true}}],"spec":{"version":1,"widgetType":"table","encodings":{"columns":[{"fieldName":"waf_id","booleanValues":["false","true"],"imageUrlTemplate":"{{ @ }}","imageTitleTemplate":"{{ @ }}","imageWidth":"","imageHeight":"","linkUrlTemplate":"{{ @ }}","linkTextTemplate":"{{ @ }}","linkTitleTemplate":"{{ @ }}","linkOpenInNewTab":true,"type":"string","displayAs":"string","visible":true,"order":100000,"title":"waf_id","allowSearch":false,"alignContent":"left","allowHTML":false,"highlightLinks":false,"useMonospaceFont":false,"preserveWhitespace":false,"displayName":"waf_id"},{"fieldName":"principle","booleanValues":["false","true"],"imageUrlTemplate":"{{ @ }}","imageTitleTemplate":"{{ @ }}","imageWidth":"","imageHeight":"","linkUrlTemplate":"{{ @ }}","linkTextTemplate":"{{ @ }}","linkTitleTemplate":"{{ @ }}","linkOpenInNewTab":true,"type":"string","displayAs":"string","visible":true,"order":100001,"title":"principle","allowSearch":false,"alignContent":"left","allowHTML":false,"highlightLinks":false,"useMonospaceFont":false,"preserveWhitespace":false,"displayName":"principle"},{"fieldName":"best_practice","booleanValues":["false","true"],"imageUrlTemplate":"{{ @ }}","imageTitleTemplate":"{{ @ }}","imageWidth":"","imageHeight":"","linkUrlTemplate":"{{ @ }}","linkTextTemplate":"{{ @ }}","linkTitleTemplate":"{{ @ }}","linkOpenInNewTab":true,"type":"string","displayAs":"string","visible":true,"order":100002,"title":"best_practice","allowSearch":false,"alignContent":"left","allowHTML":false,"highlightLinks":false,"useMonospaceFont":false,"preserveWhitespace":false,"displayName":"best_practice"},{"fieldName":"implemented","booleanValues":["false","true"],"imageUrlTemplate":"{{ @ }}","imageTitleTemplate":"{{ @ }}","imageWidth":"","imageHeight":"","linkUrlTemplate":"{{ @ }}","linkTextTemplate":"{{ @ }}","linkTitleTemplate":"{{ @ }}","linkOpenInNewTab":true,"type":"string","displayAs":"string","visible":true,"order":100003,"title":"implemented","allowSearch":false,"alignContent":"left","allowHTML":false,"highlightLinks":false,"useMonospaceFont":false,"preserveWhitespace":false,"displayName":"implemented"}]},"invisibleColumns":[],"allowHTMLByDefault":false,"itemsPerPage":25,"paginationSize":"default","condensed":true,"withRowNumber":false,"frame":{"title":"WAF Controls Table","showTitle":true}}},"position":{"x":0,"y":10,"width":6,"height":8}},{"widget":{"name":"f430b8b3","queries":[{"name":"main_query","query":{"datasetName":"650b5e73","fields":[{"name":"sum(completion_percent)","expression":"SUM(`completion_percent`)"},{"name":"principle","expression":"`principle`"}],"disaggregated":false}}],"spec":{"version":3,"widgetType":"bar","encodings":{"x":{"fieldName":"sum(completion_percent)","scale":{"type":"quantitative"},"displayName":"Sum of completion_percent"},"y":{"fieldName":"principle","scale":{"type":"categorical","sort":{"by":"x-reversed"}},"displayName":"principle"}},"frame":{"title":"Completion percentage of implemented controls per principle","showTitle":true}}},"position":{"x":0,"y":4,"width":6,"height":6}},{"widget":{"name":"2e9c41c0","queries":[{"name":"main_query","query":{"datasetName":"4a13154c","fields":[{"name":"avg(completion_percent)","expression":"AVG(`completion_percent`)"}],"disaggregated":false}}],"spec":{"version":2,"widgetType":"counter","encodings":{"value":{"fieldName":"avg(completion_percent)","displayName":"Average completion_percent"}},"frame":{"title":"Completion Percentage","showTitle":true}}},"position":{"x":0,"y":2,"width":6,"height":2}}],"pageType":"PAGE_TYPE_CANVAS"}],"uiSettings":{"theme":{}}}